{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3Ceb74A902dc5fc11cF6337F68d04cB834AE6A22",
    "txHash": "0x0cd8d053d806427acbc86d52ed2c9167a3215de8bc59ca9a59db9ad672f15303"
  },
  "proxies": [
    {
      "address": "0x76420bfC35CD4841C5dd3920f3a0f0aC4831208A",
      "txHash": "0x7609e045d8dc147e5206f23d2e2443115b557699d7f921440bcc77fa4e44386e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "bbcd02d3a9b0a9a2845bb13d6490c14bb6cf3fcbb7aa3fa95c3098d551bdafd8": {
      "address": "0xd6baC58A372f1F77F483C62FC674612AA5043Fd2",
      "txHash": "0x3f3ee098c376a6f694e5ab1a257e13af3a00371949da2ab9247e5453474e23a8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "firstBlock",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(BlockHeader)5158_storage",
            "contract": "HarmonyLightClient",
            "src": "contracts/HarmonyLightClient.sol:48"
          },
          {
            "label": "lastCheckPointBlock",
            "offset": 0,
            "slot": "211",
            "type": "t_struct(BlockHeader)5158_storage",
            "contract": "HarmonyLightClient",
            "src": "contracts/HarmonyLightClient.sol:49"
          },
          {
            "label": "epochCheckPointBlockNumbers",
            "offset": 0,
            "slot": "221",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "HarmonyLightClient",
            "src": "contracts/HarmonyLightClient.sol:52"
          },
          {
            "label": "checkPointBlocks",
            "offset": 0,
            "slot": "222",
            "type": "t_mapping(t_uint256,t_struct(BlockHeader)5158_storage)",
            "contract": "HarmonyLightClient",
            "src": "contracts/HarmonyLightClient.sol:55"
          },
          {
            "label": "epochMmrRoots",
            "offset": 0,
            "slot": "223",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "HarmonyLightClient",
            "src": "contracts/HarmonyLightClient.sol:57"
          },
          {
            "label": "relayerThreshold",
            "offset": 0,
            "slot": "224",
            "type": "t_uint8",
            "contract": "HarmonyLightClient",
            "src": "contracts/HarmonyLightClient.sol:59"
          },
          {
            "label": "oldestEpochStored",
            "offset": 0,
            "slot": "225",
            "type": "t_uint256",
            "contract": "HarmonyLightClient",
            "src": "contracts/HarmonyLightClient.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BlockHeader)5158_storage)": {
            "label": "mapping(uint256 => struct HarmonyLightClient.BlockHeader)",
            "numberOfBytes": "32"
          },
          "t_struct(BlockHeader)5158_storage": {
            "label": "struct HarmonyLightClient.BlockHeader",
            "members": [
              {
                "label": "parentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stateRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "transactionsRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "receiptsRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "number",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "shard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "time",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mmrRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
