{"version":3,"file":"index.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/utils.ts","../src/account.ts","../src/wallet.ts","../src/types.ts","../src/hdnode.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @packageDocumentation\n * @module harmony-account\n * @hidden\n */\n\nimport { HttpProvider, Messenger } from '@harmony-js/network';\nimport { ChainType, ChainID } from '@harmony-js/utils';\n\nexport const defaultMessenger = new Messenger(\n  new HttpProvider('http://localhost:9500'),\n  ChainType.Harmony,\n  ChainID.HmyLocal,\n);\n","/**\n * @packageDocumentation\n * @module harmony-account\n *\n */\n\nimport {\n  generatePrivateKey,\n  getAddressFromPrivateKey,\n  getPubkeyFromPrivateKey,\n  // toChecksumAddress,\n  encrypt,\n  decrypt,\n  EncryptOptions,\n  Keystore,\n  Signature,\n  getAddress,\n} from '@harmony-js/crypto';\n\nimport {\n  isPrivateKey,\n  add0xToString,\n  hexToNumber,\n  AddressSuffix,\n  ChainType,\n} from '@harmony-js/utils';\nimport { Transaction, RLPSign } from '@harmony-js/transaction';\nimport { StakingTransaction } from '@harmony-js/staking';\nimport { Messenger, RPCMethod } from '@harmony-js/network';\nimport { Shards } from './types';\nimport { defaultMessenger } from './utils';\n\nexport interface Balance {\n  balance?: string;\n  nonce?: number;\n  shardID?: number;\n}\n\nclass Account {\n  /**\n   * static method create account\n   *\n   * @example\n   * ```javascript\n   * const account = new Account();\n   * console.log(account);\n   * ```\n   */\n  static new(): Account {\n    const newAcc = new Account()._new();\n    return newAcc;\n  }\n  /**\n   * Static Method: add a private key to Account\n   * @param  {string} key - private Key\n   *\n   * @example\n   * ```javascript\n   * const account = new Account.add(key_1);\n   * console.log(account);\n   * ```\n   */\n  static add(key: string): Account {\n    const newAcc = new Account()._import(key);\n    return newAcc;\n  }\n\n  /**@hidden */\n  privateKey?: string;\n  /**@hidden */\n  publicKey?: string;\n  /**@hidden */\n  address?: string;\n  /**@hidden */\n  balance?: string = '0';\n  /**@hidden */\n  nonce?: number = 0;\n  /**@hidden */\n  shardID: number;\n  /**@hidden */\n  shards: Shards;\n  /**@hidden */\n  messenger: Messenger;\n  /**@hidden */\n  encrypted: boolean = false;\n\n  /**\n   * check sum address\n   *\n   * @example\n   * ```javascript\n   * console.log(account.checksumAddress);\n   * ```\n   */\n  get checksumAddress(): string {\n    return this.address ? getAddress(this.address).checksum : '';\n  }\n\n  /**\n   * Get bech32 Address\n   *\n   * @example\n   * ```javascript\n   * console.log(account.bech32Address);\n   * ```\n   */\n  get bech32Address(): string {\n    return this.address ? getAddress(this.address).bech32 : '';\n  }\n\n  /**\n   * get Bech32 TestNet Address\n   *\n   * @example\n   * ```javascript\n   * console.log(account.bech32TestNetAddress);\n   * ```\n   */\n  get bech32TestNetAddress(): string {\n    return this.address ? getAddress(this.address).bech32TestNet : '';\n  }\n\n  /**\n   * get Shards number with this Account\n   *\n   * @example\n   * ```javascript\n   * console.log(account.getShardsCount);\n   * ```\n   */\n  get getShardsCount(): number {\n    return this.shards.size;\n  }\n\n  /**\n   * Generate an account object\n   *\n   * @param key import an existing privateKey, or create a random one\n   * @param messenger you can setMessage later, or set message on `new`\n   *\n   * @example\n   * ```javascript\n   * // import the Account class\n   * const { Account } = require('@harmony-js/account');\n   *\n   * // Messenger is optional, by default, we have a defaultMessenger\n   * // If you like to change, you will import related package here.\n   * const { HttpProvider, Messenger } = require('@harmony-js/network');\n   * const { ChainType, ChainID } = require('@harmony-js/utils');\n   *\n   * // create a custom messenger\n   * const customMessenger = new Messenger(\n   *   new HttpProvider('http://localhost:9500'),\n   *   ChainType.Harmony, // if you are connected to Harmony's blockchain\n   *   ChainID.HmyLocal, // check if the chainId is correct\n   * )\n   *\n   * // setMessenger later\n   * const randomAccount = new Account()\n   * randomAccount.setMessenger(customMessenger)\n   *\n   * // or you can set messenger on `new`\n   * const randomAccountWithCustomMessenger = new Account(undefined, customMessenger)\n   *\n   * // NOTED: Key with or without `0x` are accepted, makes no different\n   * // NOTED: DO NOT import `mnemonic phrase` using `Account` class, use `Wallet` instead\n   * const myPrivateKey = '0xe19d05c5452598e24caad4a0d85a49146f7be089515c905ae6a19e8a578a6930'\n   * const myAccountWithMyPrivateKey = new Account(myPrivateKey)\n   * ```\n   */\n  constructor(key?: string, messenger: Messenger = defaultMessenger) {\n    this.messenger = messenger;\n    if (!key) {\n      this._new();\n    } else {\n      this._import(key);\n    }\n    this.shardID = this.messenger.currentShard || 0;\n    this.shards = new Map();\n    this.shards.set(this.shardID, {\n      address: `${this.bech32Address}${AddressSuffix}0`,\n      balance: this.balance || '0',\n      nonce: this.nonce || 0,\n    });\n  }\n\n  async toFile(password: string, options?: EncryptOptions): Promise<string> {\n    if (this.privateKey && isPrivateKey(this.privateKey)) {\n      const file = await encrypt(this.privateKey, password, options);\n      this.privateKey = file;\n      this.encrypted = true;\n      return file;\n    } else {\n      throw new Error('Encryption failed because PrivateKey is not correct');\n    }\n  }\n\n  async fromFile(keyStore: string, password: string): Promise<Account> {\n    try {\n      if (typeof password !== 'string') {\n        throw new Error('you must provide password');\n      }\n      const file: Keystore = JSON.parse(keyStore.toLowerCase());\n      const decyptedPrivateKey = await decrypt(file, password);\n      if (isPrivateKey(decyptedPrivateKey)) {\n        return this._import(decyptedPrivateKey);\n      } else {\n        throw new Error('decrypted failed');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * Get the account balance\n   *\n   * @param blockNumber by default, it's `latest`\n   *\n   * @example\n   * ```javascript\n   * account.getBalance().then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  async getBalance(blockNumber: string = 'latest'): Promise<Balance> {\n    try {\n      if (this.messenger) {\n        const balance = await this.messenger.send(\n          RPCMethod.GetBalance,\n          [this.address, blockNumber],\n          this.messenger.chainPrefix,\n          this.messenger.currentShard || 0,\n        );\n\n        const nonce = await this.messenger.send(\n          RPCMethod.GetTransactionCount,\n          [this.address, blockNumber],\n          this.messenger.chainPrefix,\n          this.messenger.currentShard || 0,\n        );\n        if (balance.isError()) {\n          throw balance.error.message;\n        }\n        if (nonce.isError()) {\n          throw nonce.error.message;\n        }\n\n        this.balance = hexToNumber(balance.result);\n        this.nonce = Number.parseInt(hexToNumber(nonce.result), 10);\n        this.shardID = this.messenger.currentShard || 0;\n      } else {\n        throw new Error('No Messenger found');\n      }\n      return {\n        balance: this.balance,\n        nonce: this.nonce,\n        shardID: this.shardID,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * @function updateShards\n   */\n  async updateBalances(blockNumber: string = 'latest'): Promise<void> {\n    // this.messenger.setShardingProviders();\n    const shardProviders = this.messenger.shardProviders;\n    if (shardProviders.size > 1) {\n      for (const [name, val] of shardProviders) {\n        const balanceObject = await this.getShardBalance(val.shardID, blockNumber);\n        await this.shards.set(name === val.shardID ? name : val.shardID, balanceObject);\n      }\n    } else {\n      const currentShard = await this.getShardBalance(\n        this.messenger.currentShard || 0,\n        blockNumber,\n      );\n      this.shards.set(this.messenger.currentShard || 0, currentShard);\n    }\n  }\n\n  /**\n   * @function signTransaction\n   */\n  async signTransaction(\n    transaction: Transaction,\n    updateNonce: boolean = true,\n    encodeMode: string = 'rlp',\n    blockNumber: string = 'latest',\n  ): Promise<Transaction> {\n    if (!this.privateKey || !isPrivateKey(this.privateKey)) {\n      throw new Error(`${this.privateKey} is not found or not correct`);\n    }\n\n    if (updateNonce) {\n      // await this.updateBalances(blockNumber);\n      const txShardID = transaction.txParams.shardID;\n      const shardBalanceObject = await this.getShardBalance(\n        typeof txShardID === 'string' ? Number.parseInt(txShardID, 10) : txShardID,\n        blockNumber,\n      );\n      if (shardBalanceObject !== undefined) {\n        const shardNonce = shardBalanceObject.nonce;\n        transaction.setParams({\n          ...transaction.txParams,\n          from:\n            this.messenger.chainPrefix === ChainType.Harmony\n              ? this.bech32Address\n              : this.checksumAddress || '0x',\n          nonce: shardNonce,\n        });\n      } else {\n        transaction.setParams({\n          ...transaction.txParams,\n          from:\n            this.messenger.chainPrefix === ChainType.Harmony\n              ? this.bech32Address\n              : this.checksumAddress || '0x',\n          nonce: 0,\n        });\n      }\n    }\n\n    if (encodeMode === 'rlp') {\n      const [signature, rawTransaction]: [Signature, string] = RLPSign(\n        transaction,\n        this.privateKey,\n      );\n      return transaction.map((obj: any) => {\n        return {\n          ...obj,\n          signature,\n          rawTransaction,\n          from:\n            this.messenger.chainPrefix === ChainType.Harmony\n              ? this.bech32Address\n              : this.checksumAddress || '0x',\n        };\n      });\n    } else {\n      // TODO: if we use other encode method, eg. protobuf, we should implement this\n      return transaction;\n    }\n  }\n\n  /**\n   * This function is still in development, coming soon!\n   *\n   * @param staking\n   * @param updateNonce\n   * @param encodeMode\n   * @param blockNumber\n   * @param shardID\n   */\n  async signStaking(\n    staking: StakingTransaction,\n    updateNonce: boolean = true,\n    encodeMode: string = 'rlp',\n    blockNumber: string = 'latest',\n    shardID: number = this.messenger.currentShard,\n  ): Promise<StakingTransaction> {\n    if (!this.privateKey || !isPrivateKey(this.privateKey)) {\n      throw new Error(`${this.privateKey} is not found or not correct`);\n    }\n\n    if (updateNonce) {\n      // await this.updateBalances(blockNumber);\n      const txShardID = shardID;\n      const shardBalanceObject = await this.getShardBalance(\n        typeof txShardID === 'string' ? Number.parseInt(txShardID, 10) : txShardID,\n        blockNumber,\n      );\n      if (shardBalanceObject !== undefined) {\n        const shardNonce = shardBalanceObject.nonce;\n\n        staking.setFromAddress(\n          this.messenger.chainPrefix === ChainType.Harmony\n            ? this.bech32Address\n            : this.checksumAddress || '0x',\n        );\n        staking.setNonce(shardNonce);\n      } else {\n        staking.setFromAddress(\n          this.messenger.chainPrefix === ChainType.Harmony\n            ? this.bech32Address\n            : this.checksumAddress || '0x',\n        );\n        staking.setNonce(0);\n      }\n    }\n\n    if (encodeMode === 'rlp') {\n      const [signature, rawTransaction]: [Signature, string] = staking.rlpSign(this.privateKey);\n      staking.setRawTransaction(rawTransaction);\n      staking.setSignature(signature);\n      staking.setFromAddress(\n        this.messenger.chainPrefix === ChainType.Harmony\n          ? this.bech32Address\n          : this.checksumAddress || '0x',\n      );\n\n      return staking;\n    } else {\n      // TODO: if we use other encode method, eg. protobuf, we should implement this\n      return staking;\n    }\n  }\n\n  /**\n   * @param messenger\n   *\n   * @example\n   * ```javascript\n   * // create a custom messenger\n   * const customMessenger = new Messenger(\n   *   new HttpProvider('http://localhost:9500'),\n   *   ChainType.Harmony, // if you are connected to Harmony's blockchain\n   *   ChainID.HmyLocal, // check if the chainId is correct\n   * )\n   *\n   * // to create an Account with random privateKey\n   * // and you can setMessenger later\n   * const randomAccount = new Account()\n   * randomAccount.setMessenger(customMessenger)\n   * ```\n   */\n  setMessenger(messenger: Messenger) {\n    this.messenger = messenger;\n  }\n\n  /**\n   * Get account address from shard ID\n   * @param shardID\n   *\n   * @example\n   * ```javascript\n   * console.log(account.getAddressFromShardID(0));\n   *\n   * > one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7-0\n   * ```\n   */\n  getAddressFromShardID(shardID: number) {\n    const shardObject = this.shards.get(shardID);\n    if (shardObject) {\n      return shardObject.address;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Get all shards' addresses from the account\n   *\n   * @example\n   * ```javascript\n   * console.log(account.getAddresses());\n   * ```\n   */\n  getAddresses(): string[] {\n    const addressArray: string[] = [];\n    for (const [name, val] of this.shards) {\n      const index: number = typeof name === 'string' ? Number.parseInt(name, 10) : name;\n      addressArray[index] = val.address;\n    }\n    return addressArray;\n  }\n\n  /**\n   * Get the specific shard's balance\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @param blockNumber by default, it's `latest`\n   *\n   * @example\n   * ```\n   * account.getShardBalance().then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  async getShardBalance(shardID: number, blockNumber: string = 'latest') {\n    const balance = await this.messenger.send(\n      RPCMethod.GetBalance,\n      [this.address, blockNumber],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n\n    const nonce = await this.messenger.send(\n      RPCMethod.GetTransactionCount,\n      [this.address, blockNumber],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n\n    if (balance.isError()) {\n      throw balance.error.message;\n    }\n    if (nonce.isError()) {\n      throw nonce.error.message;\n    }\n    return {\n      address: `${this.bech32Address}${AddressSuffix}${shardID}`,\n      balance: hexToNumber(balance.result),\n      nonce: Number.parseInt(hexToNumber(nonce.result), 10),\n    };\n  }\n\n  /**\n   * @function _new private method create Account\n   * @return {Account} Account instance\n   * @ignore\n   */\n  private _new(): Account {\n    const prv = generatePrivateKey();\n    if (!isPrivateKey(prv)) {\n      throw new Error('key gen failed');\n    }\n    return this._import(prv);\n  }\n\n  /**\n   * @function _import private method import a private Key\n   * @param  {string} key - private key\n   * @return {Account} Account instance\n   * @ignore\n   */\n  private _import(key: string): Account {\n    if (!isPrivateKey(key)) {\n      throw new Error(`${key} is not PrivateKey`);\n    }\n    this.privateKey = add0xToString(key);\n    this.publicKey = getPubkeyFromPrivateKey(this.privateKey);\n    this.address = getAddressFromPrivateKey(this.privateKey);\n    this.shardID = this.messenger.currentShard || 0;\n    this.shards = new Map();\n    this.shards.set(this.shardID, {\n      address: `${this.bech32Address}${AddressSuffix}0`,\n      balance: this.balance || '0',\n      nonce: this.nonce || 0,\n    });\n    this.encrypted = false;\n    return this;\n  }\n}\n\n/**\n * This comment _supports_ [Markdown](https://marked.js.org/)\n */\nexport { Account };\n","/**\n * @packageDocumentation\n * @module harmony-account\n */\n\nimport { bip39, hdkey, EncryptOptions, getAddress, generatePrivateKey } from '@harmony-js/crypto';\nimport { Messenger } from '@harmony-js/network';\nimport { isPrivateKey, isAddress, ChainType } from '@harmony-js/utils';\nimport { Transaction } from '@harmony-js/transaction';\nimport { StakingTransaction } from '@harmony-js/staking';\nimport { Account } from './account';\nimport { defaultMessenger } from './utils';\n\nclass Wallet {\n  // static method generate Mnemonic\n  static generateMnemonic(): string {\n    return bip39.generateMnemonic();\n  }\n\n  /** @hidden */\n  messenger: Messenger;\n  /** @hidden */\n  protected defaultSigner?: string;\n  /**\n   * @hidden\n   */\n  private accountMap: Map<string, Account> = new Map();\n\n  /**\n   * get acounts addresses\n   *\n   * @return {string[]} accounts addresses\n   *\n   * @example\n   * ```javascript\n   * const wallet = new Wallet(customMessenger);\n   * const key_1 = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n   * wallet.addByPrivateKey(key_1);\n   *\n   * console.log(wallet.accounts);\n   * ```\n   */\n  get accounts(): string[] {\n    return [...this.accountMap.keys()];\n  }\n\n  /**\n   * get the signer of the account, by default, using the first account\n   *\n   * @example\n   * ```javascript\n   * const wallet = new Wallet(customMessenger);\n   * const key_1 = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n   * wallet.addByPrivateKey(key_1);\n   *\n   * console.log(wallet.signer)\n   * ```\n   */\n  get signer(): Account | undefined {\n    if (this.defaultSigner) {\n      return this.getAccount(this.defaultSigner);\n    } else if (!this.defaultSigner && this.accounts.length > 0) {\n      this.setSigner(this.accounts[0]);\n      return this.getAccount(this.accounts[0]);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @example\n   * ```\n   * const { Wallet } = require('@harmony-js/account');\n   * const { HttpProvider, Messenger } = require('@harmony-js/network');\n   * const { ChainType, ChainID } = require('@harmony-js/utils');\n   *\n   * // create a custom messenger\n   * const customMessenger = new Messenger(\n   *   new HttpProvider('http://localhost:9500'),\n   *   ChainType.Harmony, // if you are connected to Harmony's blockchain\n   *   ChainID.HmyLocal, // check if the chainId is correct\n   * )\n   *\n   * const wallet = new Wallet(customMessenger);\n   * ```\n   */\n  constructor(messenger: Messenger = defaultMessenger) {\n    this.messenger = messenger;\n  }\n  /**\n   * @function newMnemonic\n   * @memberof Wallet\n   * @return {string} Mnemonics\n   */\n  newMnemonic(): string {\n    return Wallet.generateMnemonic();\n  }\n\n  /**\n   * Add account using Mnemonic phrases\n   * @param  {string} phrase - Mnemonic phrase\n   * @param  {index} index - index to hdKey root\n   *\n   * @example\n   * ```javascript\n   * const mnemonic_1 = 'urge clog right example dish drill card maximum mix bachelor section select';\n   * const wallet = new Wallet(customMessenger);\n   * wallet.addByMnemonic(mnemonic_1);\n   *\n   * console.log(wallet.accounts);\n   * ```\n   */\n  addByMnemonic(phrase: string, index: number = 0) {\n    if (!this.isValidMnemonic(phrase)) {\n      throw new Error(`Invalid mnemonic phrase: ${phrase}`);\n    }\n    const seed = bip39.mnemonicToSeed(phrase);\n    const hdKey = hdkey.fromMasterSeed(seed);\n    // TODO:hdkey should apply to Harmony's settings\n    const path = this.messenger.chainType === ChainType.Harmony ? '1023' : '60';\n    const childKey = hdKey.derive(`m/44'/${path}'/0'/0/${index}`);\n    const privateKey = childKey.privateKey.toString('hex');\n    return this.addByPrivateKey(privateKey);\n  }\n\n  /**\n   * Add an account using privateKey\n   *\n   * @param  {string} privateKey - privateKey to add\n   * @return {Account} return added Account\n   *\n   * @example\n   * ```javascript\n   * const wallet = new Wallet(customMessenger);\n   * const key_1 = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n   * console.log(wallet.addByPrivateKey(key_1));\n   * ```\n   */\n  addByPrivateKey(privateKey: string): Account {\n    try {\n      const newAcc = Account.add(privateKey);\n      newAcc.setMessenger(this.messenger);\n      if (newAcc.address) {\n        this.accountMap.set(newAcc.address, newAcc);\n        if (!this.defaultSigner) {\n          this.setSigner(newAcc.address);\n        }\n        return newAcc;\n      } else {\n        throw new Error('add account failed');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * Add an account using privateKey\n   * @param  {string} keyStore - keystore jsonString to add\n   * @param  {string} password - password to decrypt the file\n   * @return {Account} return added Account\n   */\n  async addByKeyStore(keyStore: string, password: string): Promise<Account> {\n    try {\n      const newAcc = new Account(undefined);\n      const result = await newAcc.fromFile(keyStore, password);\n      result.setMessenger(this.messenger);\n      if (result.address) {\n        this.accountMap.set(result.address, result);\n        if (!this.defaultSigner) {\n          this.setSigner(result.address);\n        }\n        return result;\n      } else {\n        throw new Error('add account failed');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * create a new account using Mnemonic\n   * @return {Account} {description}\n   *\n   * @example\n   * ```javascript\n   * console.log(wallet.accounts);\n   * wallet.createAccount();\n   * wallet.createAccount();\n   *\n   * console.log(wallet.accounts);\n   * ````\n   */\n  async createAccount(password?: string, options?: EncryptOptions): Promise<Account> {\n    const prv = generatePrivateKey();\n    const acc = this.addByPrivateKey(prv);\n    if (acc.address && password) {\n      const encrypted = await this.encryptAccount(acc.address, password, options);\n      return encrypted;\n    } else if (acc.address && !password) {\n      return acc;\n    } else {\n      throw new Error('create acount failed');\n    }\n  }\n\n  /**\n   * To encrypt an account that lives in the wallet.\n   * if encrypted, returns original one, if not found, throw error\n   * @param {string} address - address in accounts\n   * @param {string} password - string that used to encrypt\n   * @param {EncryptOptions} options - encryption options\n   * @return {Promise<Account>}\n   *\n   * @example\n   * ```javascript\n   * const key_1 = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n   * wallet.addByPrivateKey(key_1);\n   * wallet.encryptAccount('one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7', '12345').then((value) => {\n   *   console.log(value);\n   * })\n   * ```\n   */\n  async encryptAccount(\n    address: string,\n    password: string,\n    options?: EncryptOptions,\n  ): Promise<Account> {\n    try {\n      const foundAcc = this.getAccount(address);\n      if (foundAcc && foundAcc.privateKey && isPrivateKey(foundAcc.privateKey)) {\n        await foundAcc.toFile(password, options);\n        return foundAcc;\n      } else if (foundAcc && foundAcc.privateKey && !isPrivateKey(foundAcc.privateKey)) {\n        return foundAcc;\n      } else {\n        throw new Error('encrypt account failed');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * To decrypt an account that lives in the wallet,if not encrypted, return original,\n   * if not found, throw error\n   * @param {string} address - address in accounts\n   * @param {string} password - string that used to encrypt\n   * @return {Promise<Account>}\n   *\n   * @example\n   * ```javascript\n   * const key_1 = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n   * wallet.addByPrivateKey(key_1);\n   * wallet.encryptAccount('one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7', '12345')\n   * .then(() => {\n   *   wallet.decryptAccount('one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7', '12345')\n   *   .then((value) =>{\n   *      console.log(value);\n   *   });\n   * });\n   * ```\n   */\n  async decryptAccount(address: string, password: string): Promise<Account> {\n    try {\n      const foundAcc = this.getAccount(address);\n      if (foundAcc && foundAcc.privateKey && !isPrivateKey(foundAcc.privateKey)) {\n        await foundAcc.fromFile(foundAcc.privateKey, password);\n        return foundAcc;\n      } else if (foundAcc && foundAcc.privateKey && isPrivateKey(foundAcc.privateKey)) {\n        foundAcc.encrypted = false;\n        return foundAcc;\n      } else {\n        throw new Error('decrypt account failed');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * Get Account instance using address as param\n   * @param  {string} address - address hex\n   * @return {Account} Account instance which lives in Wallet\n   *\n   * @example\n   * ```\n   * const key_1 = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n   * wallet.addByPrivateKey(key_1);\n   * console.log(wallet.getAccount('one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7'));\n   * ```\n   */\n  getAccount(address: string): Account | undefined {\n    return this.accountMap.get(getAddress(address).basicHex);\n  }\n\n  /**\n   * @function removeAccount\n   * @memberof Wallet\n   * @description remove Account using address as param\n   * @param  {string} address: - address hex\n   */\n  removeAccount(address: string): void {\n    this.accountMap.delete(getAddress(address).basicHex);\n    if (this.defaultSigner === address) {\n      this.defaultSigner = undefined;\n    }\n  }\n\n  /**\n   * Set Customer Messenage\n   * @param messenger\n   *\n   * @example\n   * ```javascript\n   * const customMessenger = new Messenger(\n   *   new HttpProvider('https://api.s0.b.hmny.io'),\n   *   ChainType.Harmony, // if you are connected to Harmony's blockchain\n   *   ChainID.HmyLocal, // check if the chainId is correct\n   * )\n   * const wallet = new Wallet();\n   * wallet.setMessenger(customMessenger);\n   * console.log(wallet.messenger);\n   * ```\n   */\n  setMessenger(messenger: Messenger): void {\n    this.messenger = messenger;\n  }\n\n  /**\n   * Set signer\n   *\n   * @param address one of the address in the accounts\n   */\n  setSigner(address: string): void {\n    if (!isAddress(address) && !this.getAccount(address)) {\n      throw new Error('could not set signer');\n    }\n    this.defaultSigner = address;\n  }\n\n  async signTransaction(\n    transaction: Transaction,\n    account: Account | undefined = this.signer,\n    // tslint:disable-next-line: no-unnecessary-initializer\n    password: string | undefined = undefined,\n    updateNonce: boolean = true,\n    encodeMode: string = 'rlp',\n    blockNumber: string = 'latest',\n  ): Promise<Transaction> {\n    const toSignWith = account || this.signer;\n    if (!toSignWith) {\n      throw new Error('no signer found or did not provide correct account');\n    }\n    if (toSignWith instanceof Account && toSignWith.encrypted && toSignWith.address) {\n      if (!password) {\n        throw new Error('must provide password to further execution');\n      }\n      try {\n        const decrypted = await this.decryptAccount(toSignWith.address, password);\n        const signed = await decrypted.signTransaction(\n          transaction,\n          updateNonce,\n          encodeMode,\n          blockNumber,\n        );\n        await this.encryptAccount(toSignWith.address, password);\n        return signed;\n      } catch (error) {\n        throw error;\n      }\n    } else if (toSignWith instanceof Account && !toSignWith.encrypted && toSignWith.address) {\n      try {\n        const signed = await toSignWith.signTransaction(\n          transaction,\n          updateNonce,\n          encodeMode,\n          blockNumber,\n        );\n        return signed;\n      } catch (error) {\n        throw error;\n      }\n    } else {\n      throw new Error('sign transaction failed');\n    }\n  }\n\n  async signStaking(\n    staking: StakingTransaction,\n    account: Account | undefined = this.signer,\n    // tslint:disable-next-line: no-unnecessary-initializer\n    password: string | undefined = undefined,\n    updateNonce: boolean = true,\n    encodeMode: string = 'rlp',\n    blockNumber: string = 'latest',\n    shardID: number = this.messenger.currentShard,\n  ): Promise<StakingTransaction> {\n    const toSignWith = account || this.signer;\n    if (!toSignWith) {\n      throw new Error('no signer found or did not provide correct account');\n    }\n    if (toSignWith instanceof Account && toSignWith.encrypted && toSignWith.address) {\n      if (!password) {\n        throw new Error('must provide password to further execution');\n      }\n      try {\n        const decrypted = await this.decryptAccount(toSignWith.address, password);\n        const signed = await decrypted.signStaking(\n          staking,\n          updateNonce,\n          encodeMode,\n          blockNumber,\n          shardID,\n        );\n        await this.encryptAccount(toSignWith.address, password);\n        return signed;\n      } catch (error) {\n        throw error;\n      }\n    } else if (toSignWith instanceof Account && !toSignWith.encrypted && toSignWith.address) {\n      try {\n        const signed = await toSignWith.signStaking(\n          staking,\n          updateNonce,\n          encodeMode,\n          blockNumber,\n          shardID,\n        );\n        return signed;\n      } catch (error) {\n        throw error;\n      }\n    } else {\n      throw new Error('sign transaction failed');\n    }\n  }\n\n  /**\n   * @function isValidMnemonic\n   * @memberof Wallet\n   * @description check if Mnemonic is valid\n   * @param  {string} phrase - Mnemonic phrase\n   * @return {boolean}\n   * @ignore\n   */\n  private isValidMnemonic(phrase: string): boolean {\n    if (phrase.trim().split(/\\s+/g).length < 12) {\n      return false;\n    }\n    return bip39.validateMnemonic(phrase);\n  }\n}\n\nexport { Wallet };\n","/**\n * @packageDocumentation\n * @module harmony-account\n * @hidden\n */\n\n/**\n * test type docs\n */\nexport type ShardID = string | number;\nexport interface BalanceObject {\n  address: string;\n  balance: string;\n  nonce: number;\n}\nexport type Shards = Map<ShardID, BalanceObject>;\n","/**\n * @packageDocumentation\n * @module harmony-account\n */\n\nimport { bip39, hdkey, getAddress, BN, Signature } from '@harmony-js/crypto';\nimport {\n  HDPath,\n  // defineReadOnly,\n  isHttp,\n  isWs,\n  ChainID,\n  ChainType,\n  Unit,\n  isHex,\n  hexToNumber,\n} from '@harmony-js/utils';\nimport { Messenger, HttpProvider, WSProvider } from '@harmony-js/network';\nimport { Transaction, TxStatus, TransasctionReceipt } from '@harmony-js/transaction';\nimport { Account } from './account';\n\n/** @hidden */\nexport interface WalletsInterfaces {\n  [key: string]: Account;\n}\n\n/** @hidden */\nexport interface Web3TxPrams {\n  id?: string;\n  from?: string;\n  to?: string;\n  nonce?: number | string;\n  gasLimit?: BN | number | string;\n  gasPrice?: BN | number | string;\n  shardID?: number | string;\n  toShardID?: number | string;\n  data?: string;\n  value?: BN;\n  chainId?: number;\n  rawTransaction?: string;\n  unsignedRawTransaction?: string;\n  signature?: Signature | string;\n  receipt?: TransasctionReceipt;\n}\n\nexport class HDNode {\n  static isValidMnemonic(phrase: string): boolean {\n    if (phrase.trim().split(/\\s+/g).length < 12) {\n      return false;\n    }\n    return bip39.validateMnemonic(phrase);\n  }\n\n  static generateMnemonic(): string {\n    return bip39.generateMnemonic();\n  }\n\n  public provider: HttpProvider | WSProvider;\n  public gasLimit: string;\n  public gasPrice: string;\n  public messenger: Messenger;\n\n  /** @hidden */\n  private shardID: number;\n  /** @hidden */\n  private hdwallet: hdkey | undefined;\n  /** @hidden */\n  private path: string;\n  /** @hidden */\n  private index: number;\n  /** @hidden */\n  private addressCount: number;\n  /** @hidden */\n  private addresses: string[];\n  /** @hidden */\n  private wallets: WalletsInterfaces;\n\n  constructor(\n    provider: string | HttpProvider | WSProvider = 'http://localhost:9500',\n    menmonic?: string,\n    index: number = 0,\n    addressCount: number = 1,\n    shardID: number = 0,\n    chainType: ChainType = ChainType.Harmony,\n    chainId: ChainID = ChainID.Default,\n    gasLimit = '1000000',\n    gasPrice = '2000000000',\n  ) {\n    this.provider = this.setProvider(provider);\n    this.shardID = shardID;\n    this.messenger = new Messenger(this.provider, chainType, chainId);\n    this.messenger.setDefaultShardID(this.shardID);\n    this.hdwallet = undefined;\n    this.addresses = [];\n    this.wallets = {};\n    this.path = chainType === ChainType.Harmony ? HDPath : `m/44'/60'/0'/0/`;\n    this.index = index;\n    this.addressCount = addressCount;\n    this.getHdWallet(menmonic || HDNode.generateMnemonic());\n    this.gasLimit = gasLimit;\n    this.gasPrice = gasPrice;\n  }\n\n  normalizePrivateKeys(mnemonic: string | string[]) {\n    if (Array.isArray(mnemonic)) {\n      return mnemonic;\n    } else if (mnemonic && !mnemonic.includes(' ')) {\n      return [mnemonic];\n    } else {\n      return false;\n    }\n  }\n\n  setProvider(provider: string | HttpProvider | WSProvider) {\n    if (isHttp(provider) && typeof provider === 'string') {\n      return new HttpProvider(provider);\n    } else if (provider instanceof HttpProvider) {\n      return provider;\n    } else if (isWs(provider) && typeof provider === 'string') {\n      return new WSProvider(provider);\n    } else if (provider instanceof WSProvider) {\n      return provider;\n    } else {\n      throw new Error('provider is not recognized');\n    }\n  }\n\n  getHdWallet(mnemonic: string) {\n    if (!HDNode.isValidMnemonic(mnemonic)) {\n      throw new Error('Mnemonic invalid or undefined');\n    }\n    this.hdwallet = hdkey.fromMasterSeed(bip39.mnemonicToSeed(mnemonic));\n\n    for (let i = this.index; i < this.index + this.addressCount; i++) {\n      if (!this.hdwallet) {\n        throw new Error('hdwallet is not found');\n      }\n      const childKey = this.hdwallet.derive(`${this.path}${i}`);\n      const prv = childKey.privateKey.toString('hex');\n      const account = new Account(prv);\n      const addr = account.checksumAddress;\n      this.addresses.push(addr);\n      this.wallets[addr] = account;\n    }\n  }\n\n  // tslint:disable-next-line: ban-types\n  getAccounts(cb?: Function) {\n    if (cb) {\n      cb(null, this.addresses);\n    }\n    return this.addresses;\n  }\n  // tslint:disable-next-line: ban-types\n  getPrivateKey(address: string, cb?: Function) {\n    if (!cb) {\n      if (!this.wallets[address]) {\n        throw new Error('Account not found');\n      } else {\n        return this.wallets[address].privateKey;\n      }\n    }\n    if (!this.wallets[address]) {\n      return cb('Account not found');\n    } else {\n      cb(null, this.wallets[address].privateKey);\n    }\n  }\n  // tslint:disable-next-line: ban-types\n  async signTransaction(txParams: any | Web3TxPrams) {\n    const from: string = txParams.from ? getAddress(txParams.from).checksum : '0x';\n    const accountNonce = await this.messenger.send(\n      'hmy_getTransactionCount',\n      [from, 'latest'],\n      'hmy',\n      this.shardID,\n    );\n\n    const to: string = txParams.to ? getAddress(txParams.to).checksum : '0x';\n\n    let gasLimit = new Unit('0').asWei().toWei();\n\n    if (txParams.gas !== undefined && isHex(txParams.gas)) {\n      gasLimit = new Unit(txParams.gas)\n        .asWei()\n        .toWei()\n        .lt(new Unit(this.gasLimit).asWei().toWei())\n        ? new Unit(txParams.gas).asWei().toWei()\n        : new Unit(this.gasLimit).asWei().toWei();\n    }\n    if (txParams.gasLimit !== undefined && isHex(txParams.gasLimit)) {\n      gasLimit = new Unit(txParams.gasLimit)\n        .asWei()\n        .toWei()\n        .lt(new Unit(this.gasLimit).asWei().toWei())\n        ? new Unit(txParams.gasLimit).asWei().toWei()\n        : new Unit(this.gasLimit).asWei().toWei();\n    }\n\n    let gasPrice = new Unit('0').asWei().toWei();\n    if (txParams.gasPrice !== undefined && isHex(txParams.gasPrice)) {\n      gasPrice = new Unit(txParams.gasPrice)\n        .asWei()\n        .toWei()\n        .lt(new Unit(this.gasPrice).asWei().toWei())\n        ? new Unit(txParams.gasPrice).asWei().toWei()\n        : new Unit(this.gasPrice).asWei().toWei();\n    }\n\n    const value = txParams.value !== undefined && isHex(txParams.value) ? txParams.value : '0';\n    const nonce =\n      txParams.nonce !== undefined && isHex(txParams.nonce)\n        ? Number.parseInt(hexToNumber(txParams.nonce), 10)\n        : Number.parseInt(hexToNumber(accountNonce.result), 10);\n    const data = txParams.data !== undefined && isHex(txParams.data) ? txParams.data : '0x';\n    const prv = this.wallets[from].privateKey;\n\n    const signerAccount = new Account(prv, this.messenger);\n\n    const tx = new Transaction(\n      {\n        ...txParams,\n        from,\n        to,\n        gasLimit,\n        gasPrice,\n        value,\n        nonce,\n        data,\n        shardID: this.shardID,\n        chainId: this.messenger.chainId,\n      },\n      this.messenger,\n      TxStatus.INTIALIZED,\n    );\n\n    const signed = await signerAccount.signTransaction(tx);\n\n    return signed.getRawTransaction();\n  }\n  getAddress(idx?: number) {\n    if (!idx) {\n      return this.addresses[0];\n    } else {\n      return this.addresses[idx];\n    }\n  }\n  getAddresses() {\n    return this.addresses;\n  }\n  addByPrivateKey(privateKey: string) {\n    const account = new Account(privateKey);\n    const addr = account.checksumAddress;\n    this.addresses.push(addr);\n    this.wallets[addr] = account;\n    return addr;\n  }\n\n  setSigner(address: string) {\n    const foundIndex = this.addresses.findIndex((value) => value === address);\n    this.addresses.slice(foundIndex, foundIndex + 1);\n    this.addresses.unshift(address);\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-account\n * @ignore\n */\n\nexport * from './account';\nexport * from './wallet';\nexport * from './types';\nexport * from './utils';\nexport * from './hdnode';\n"],"names":["Messenger","HttpProvider","AddressSuffix","getAddress","isPrivateKey","encrypt","decrypt","hexToNumber","transaction","RLPSign","generatePrivateKey","add0xToString","getPubkeyFromPrivateKey","getAddressFromPrivateKey","bip39","hdkey","isAddress","HDPath","isHttp","isWs","WSProvider","Unit","isHex","Transaction"],"mappings":"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"}