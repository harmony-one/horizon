{"version":3,"file":"index.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/blockchain.ts","../src/harmony.ts","../src/truffleProvider.ts","../src/harmonyExtension.ts","../src/types.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * ## About this package\n *\n * `@harmony-js/core` is collection of modules to guide user to interacte with harmony blockchian.\n *\n * Develops can use this package to:\n * - Create a `harmony` instance\n * - Create a `harmonyExtension` instance, which support fo `MathWallet`\n * - Get block and transaction by hash or blocknumber\n * - Send transaction\n * - Get balance of address\n *\n * ## How to use `@harmony-core`\n * ### Dependencies\n * - @harmony-js/core\n * - @harmony-js/utils\n *\n * ### Step 1: Initialize the Harmony instance\n * Before using harmony-core package, you should initialize the Harmony instance\n * ```javascript\n * // import or require Harmony class\n * const { Harmony } = require('@harmony-js/core');\n * // import or require settings\n * const { ChainID, ChainType } = require('@harmony-js/utils');\n *\n * // initialize the Harmony instance\n * const hmy = new Harmony(\n *   // rpc url\n *   'https://api.s0.b.hmny.io/',\n *   {\n *     // chainType set to Harmony\n *     chainType: ChainType.Harmony,\n *     // chainType set to HmyLocal\n *     chainId: ChainID.HmyLocal,\n *   },\n * );\n * ```\n *\n * ### Step 2: Use the instance to call specific functions\n * Example 1: get balance\n * ```javascript\n * // get balance\n * hmy.blockchain.getBalance({\n *   address: 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7',\n *   blockNumber: 'latest'\n * }).then((value) => {\n *   console.log(value.result);\n * });\n * ```\n *\n * Example 2: send transaction\n * ```\n * // add privateKey to wallet\n * const privateKey = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n * hmy.wallet.addByPrivateKey(privateKey);\n *\n * async function transfer() {\n *   const txn = hmy.transactions.newTx({\n *     //  token send to\n *     to: 'one166axnkjmghkf3df7xfvd0hn4dft8kemrza4cd2',\n *     // amount to send\n *     value: '10000',\n *     // gas limit, you can use string\n *     gasLimit: '210000',\n *     // send token from shardID\n *     shardID: 0,\n *     // send token to toShardID\n *     toShardID: 0,\n *     // gas Price, you can use Unit class, and use Gwei, then remember to use toWei(), which will be transformed to BN\n *     gasPrice: new hmy.utils.Unit('100').asGwei().toWei(),\n *   });\n *\n *   // sign the transaction use wallet;\n *   const signedTxn = await hmy.wallet.signTransaction(txn);\n *   const txnHash = await hmy.blockchain.sendTransaction(signedTxn);\n *   console.log(txnHash.result);\n * }\n *\n * transfer();\n * ```\n *\n * @packageDocumentation\n * @module harmony-core\n */\n\nimport {\n  RPCMethod,\n  Messenger,\n  ResponseMiddleware,\n  WSProvider,\n  NewPendingTransactions,\n  NewHeaders,\n  LogSub,\n  Syncing,\n} from '@harmony-js/network';\n\nimport {\n  assertObject,\n  AssertType,\n  // HarmonyCore,\n  DefaultBlockParams,\n} from '@harmony-js/utils';\n\nimport { getAddress } from '@harmony-js/crypto';\n\nimport { Transaction } from '@harmony-js/transaction';\nimport { StakingTransaction } from '@harmony-js/staking';\n\nclass Blockchain {\n  /**\n   * @hidden\n   */\n  messenger: Messenger;\n\n  /**\n   * @hidden\n   */\n  constructor(messenger: Messenger) {\n    this.messenger = messenger;\n  }\n\n  /**\n   * @hidden\n   */\n  setMessenger(messenger: Messenger) {\n    this.messenger = messenger;\n  }\n\n  /**\n   *\n   * @hidden\n   */\n  getRpcResult(result: any) {\n    if (result instanceof ResponseMiddleware) {\n      return result.getRaw;\n    } else {\n      return result;\n    }\n  }\n\n  /**\n   * Get the balance of an address at a given block.\n   *\n   * @param address the address to get the balance of.\n   * @param blockNumber (option) If you pass this parameter it will not use the default block set with `DefaultBlockParams.latest`\n   * @param shardID (option) If you pass this parameter it will not use the default block set with `this.messenger.currentShard`\n   *\n   * @returns The current balance for the given address in wei.\n   *\n   * @hint\n   * ```\n   * the third param `shardID` is binding with the endpoint\n   * shard 0: localhost:9500\n   * shard 1: localhost:9501\n   * ```\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getBalance({\n   *   address: 'one103q7qe5t2505lypvltkqtddaef5tzfxwsse4z7',\n   *   blockNumber: 'latest'\n   * }).then(value => {\n   *   console.log(value.result);\n   * });\n   * ```\n   */\n  @assertObject({\n    address: ['isValidAddress', AssertType.required],\n    blockNumber: ['isBlockNumber', AssertType.optional],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getBalance({\n    address,\n    blockNumber = DefaultBlockParams.latest,\n    shardID = this.messenger.currentShard,\n  }: {\n    address: string;\n    blockNumber?: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetBalance,\n      [getAddress(address).checksum, blockNumber],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns the current block number.\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @return `Promise` - The number of the most recent block.\n   *\n   * @hint\n   * ```\n   * the third param `shardID` is binding with the endpoint\n   * shard 0: localhost:9500\n   * shard 1: localhost:9501\n   * ```\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getBlockNumber().then((value) => {\n   *   console.log(value.result);\n   * });\n   * ```\n   */\n  async getBlockNumber(shardID: number = this.messenger.currentShard) {\n    const result = await this.messenger.send(\n      RPCMethod.BlockNumber,\n      [],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns a block matching the block Hash.\n   *\n   * @param blockHash the block hash\n   * @param returnObject By default it is `true`, Features in development, IGNORE it!\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` - The block object\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getBlockByHash({\n   *   blockHash: '0x9cd821b576efdff61280e8857ef218fb2cff8db0cf0fb27dfceef7237042b79e',\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    blockHash: ['isHash', AssertType.required],\n    returnObject: ['isBoolean', AssertType.optional],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getBlockByHash({\n    blockHash,\n    returnObject = true,\n    shardID = this.messenger.currentShard,\n  }: {\n    blockHash: string;\n    returnObject?: boolean;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetBlockByHash,\n      [blockHash, returnObject],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns a block matching the block Number.\n   *\n   * @param blockNumber the block number\n   * @param returnObject By default it is `true`, Features in development, IGNORE it!\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` - The block object\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getBlockByNumber({\n   *   blockNumber: '0x89',\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    blockNumber: ['isBlockNumber', AssertType.optional],\n    returnObject: ['isBoolean', AssertType.optional],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getBlockByNumber({\n    blockNumber = DefaultBlockParams.latest,\n    returnObject = true,\n    shardID = this.messenger.currentShard,\n  }: {\n    blockNumber?: string;\n    returnObject?: boolean;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetBlockByNumber,\n      [blockNumber, returnObject],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns the number of transaction in a given block.\n   *\n   * @param blockHash the block number Hash\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` -  The number of transactions in the given block.\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getBlockTransactionCountByHash({\n   *   blockHash: '0x4142514a238157e7fe57b9d54abedb33943507fa15b3799954c273a12705ced1'\n   * }).then((value) => {\n   *   console.log(value):\n   * });\n   * ```\n   */\n  @assertObject({\n    blockHash: ['isHash', AssertType.required],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getBlockTransactionCountByHash({\n    blockHash,\n    shardID = this.messenger.currentShard,\n  }: {\n    blockHash: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetBlockTransactionCountByHash,\n      [blockHash],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns the number of transaction in a given block.\n   *\n   * @param blockNumber the block number Hash\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` -  The number of transactions in the given block.\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getBlockTransactionCountByNumber({\n   *   blockNumber: '0x2403C'\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    blockNumber: ['isBlockNumber', AssertType.required],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getBlockTransactionCountByNumber({\n    blockNumber,\n    shardID = this.messenger.currentShard,\n  }: {\n    blockNumber: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetBlockTransactionCountByNumber,\n      [blockNumber],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns a transaction based on a block hash and the transactions index position.\n   *\n   * @param blockHash the block number Hash\n   * @param index The transactions index position. **Hex Number**\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` -  A transaction object\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getTransactionByBlockHashAndIndex({\n   *   blockHash: '0x4142514a238157e7fe57b9d54abedb33943507fa15b3799954c273a12705ced1',\n   *   index: '0x0'\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    blockHash: ['isHash', AssertType.required],\n    index: ['isHex', AssertType.required],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getTransactionByBlockHashAndIndex({\n    blockHash,\n    index,\n    shardID = this.messenger.currentShard,\n  }: {\n    blockHash: string;\n    index: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetTransactionByBlockHashAndIndex,\n      [blockHash, index],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns a transaction based on a block number and the transactions index position.\n   *\n   * @param blockNumber the block number\n   * @param index The transactions index position. **Hex Number**\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` -  A transaction object\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getTransactionByBlockNumberAndIndex({\n   *   blockNumber: '0x2403C',\n   *   index: '0x0'\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    blockNumber: ['isBlockNumber', AssertType.optional],\n    index: ['isHex', AssertType.required],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getTransactionByBlockNumberAndIndex({\n    blockNumber = DefaultBlockParams.latest,\n    index,\n    shardID = this.messenger.currentShard,\n  }: {\n    blockNumber?: string;\n    index: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetTransactionByBlockNumberAndIndex,\n      [blockNumber, index],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns a transaction matching the given transaction hash.\n   *\n   * @param txnHash The transaction hash\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` -  A transaction object\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getTransactionByHash({\n   *   txnHash: '0x146a0cf7e8da45b44194207c4e7785564527059483b765f9a04424554443b224'\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    txnHash: ['isHash', AssertType.required],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getTransactionByHash({\n    txnHash,\n    shardID = this.messenger.currentShard,\n  }: {\n    txnHash: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetTransactionByHash,\n      [txnHash],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns the receipt of a transaction by transaction hash.\n   *\n   * @param txnHash The transaction hash\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` -  A transaction receipt object, or `null` when no receipt was found\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getTransactionReceipt({\n   *   txnHash: '0x146a0cf7e8da45b44194207c4e7785564527059483b765f9a04424554443b224'\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    txnHash: ['isString', AssertType.required],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getTransactionReceipt({\n    txnHash,\n    shardID = this.messenger.currentShard,\n  }: {\n    txnHash: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetTransactionReceipt,\n      [txnHash],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Get transaction recepit from cross shard transaction\n   *\n   * @param txnHash The transaction hash\n   * @param shardID the shard id of receiver's address\n   * @returns `Promise` -  A transaction receipt object, or `null` when no receipt was found\n   *\n   * @example\n   * ```javascript\n   * // This transaction sends from shard 0 to shard 1\n   * hmy.blockchain.getCxReceiptByHash({\n   *   txnHash: '0x7fae9252fbda68d718e610bc10cf2b5c6a9cafb42d4a6b9d6e392c77d587b9ea',\n   *   shardID: 1,\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    txnHash: ['isString', AssertType.required],\n    shardID: ['isNumber', AssertType.required],\n  })\n  async getCxReceiptByHash({ txnHash, shardID }: { txnHash: string; shardID: number }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetCXReceiptByHash,\n      [txnHash],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Get the code at a specific address.\n   *\n   * @param address The address to get the code from (eg:smart contract)\n   * @param blockNumber (OPTIONAL) If you pass this parameter it will not use the default block\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @return `Promise` - The data at given `address`\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getCode({\n   *   address: '0x08AE1abFE01aEA60a47663bCe0794eCCD5763c19',\n   *   blockNumber: 'latest'\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    address: ['isValidAddress', AssertType.required],\n    blockNumber: ['isBlockNumber', AssertType.optional],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getCode({\n    address,\n    blockNumber = DefaultBlockParams.latest,\n    shardID = this.messenger.currentShard,\n  }: {\n    address: string;\n    blockNumber?: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetCode,\n      [getAddress(address).checksum, blockNumber],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Get the number of peers connected to.\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` - number of peer count\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.net_peerCount().then((value) => {\n   *   console.log(value.result);\n   * });\n   * ```\n   */\n  async net_peerCount(shardID: number = this.messenger.currentShard) {\n    const result = await this.messenger.send(RPCMethod.PeerCount, [], 'net', shardID);\n\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Get the version of net.\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` - the current version.\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.net_version().then((value) => {\n   *   console.log(value.result);\n   * });\n   * ```\n   */\n  async net_version(shardID: number = this.messenger.currentShard) {\n    const result = await this.messenger.send(RPCMethod.NetVersion, [], 'net', shardID);\n\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Get the protocal version.\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @returns `Promise` - the current protocol version.\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getProtocolVersion().then((value) => {\n   *   console.log(value.result);\n   * });\n   * ```\n   */\n  async getProtocolVersion(shardID: number = this.messenger.currentShard) {\n    const result = await this.messenger.send(\n      RPCMethod.ProtocolVersion,\n      [],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Get the storage at a specific position of an address\n   *\n   * @param address The address to get the storage from\n   * @param position The index position of the storage\n   * @param blockNumber by default it's `latest`.\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getStorageAt({\n   *   address: 'one1d0kw95t6kkljmkk9vu0zv25jraut8ngv5vrs5g',\n   *   position: '0x0'\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    address: ['isValidAddress', AssertType.required],\n    position: ['isHex', AssertType.required],\n    blockNumber: ['isBlockNumber', AssertType.optional],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getStorageAt({\n    address,\n    position,\n    blockNumber = DefaultBlockParams.latest,\n    shardID = this.messenger.currentShard,\n  }: {\n    address: string;\n    position: string;\n    blockNumber?: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetStorageAt,\n      [getAddress(address).checksum, position, blockNumber],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Get the numbers of transactions sent from this address.\n   *\n   * @param address The address to get the numbers of transactions from\n   * @param blockNumber by default it's `latest`\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @return `Promise` - The number of transactions sent from the given address.\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getTransactionCount({\n   *   address: \"one1d0kw95t6kkljmkk9vu0zv25jraut8ngv5vrs5g\"\n   * }).then((value) => {\n   *   console.log(value.result);\n   * });\n   * ```\n   */\n  @assertObject({\n    address: ['isValidAddress', AssertType.required],\n    blockNumber: ['isBlockNumber', AssertType.optional],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async getTransactionCount({\n    address,\n    blockNumber = DefaultBlockParams.latest,\n    shardID = this.messenger.currentShard,\n  }: {\n    address: string;\n    blockNumber?: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.GetTransactionCount,\n      [getAddress(address).checksum, blockNumber],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Get the sharding structure of current network\n   *\n   * @return `Promise` - The sharding structure of current network.\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.getShardingStructure().then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  async getShardingStructure() {\n    const result = await this.messenger.send(\n      RPCMethod.GetShardingStructure,\n      [],\n      this.messenger.chainPrefix,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Sends a signed transaction to the network.\n   *\n   * @param transaction `Object` - The transaction object to send:\n   * @return The **callbalck** will return the 32 bytes transaction hash\n   *\n   * @example\n   * ```javascript\n   * // add privateKey to wallet\n   * const privateKey = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n   * hmy.wallet.addByPrivateKey(privateKey);\n   *\n   * async function transfer() {\n   *   const txn = hmy.transactions.newTx({\n   *     //  token send to\n   *     to: 'one166axnkjmghkf3df7xfvd0hn4dft8kemrza4cd2',\n   *     // amount to send\n   *     value: '10000',\n   *     // gas limit, you can use string\n   *     gasLimit: '210000',\n   *     // send token from shardID\n   *     shardID: 0,\n   *     // send token to toShardID\n   *     toShardID: 0,\n   *     // gas Price, you can use Unit class, and use Gwei, then remember to use toWei(), which will be transformed to BN\n   *     gasPrice: new hmy.utils.Unit('100').asGwei().toWei(),\n   *   });\n   *\n   *   // sign the transaction use wallet;\n   *   const signedTxn = await hmy.wallet.signTransaction(txn);\n   *   const txnHash = await hmy.blockchain.sendTransaction(signedTxn);\n   *   console.log(txnHash.result);\n   * }\n   *\n   * transfer();\n   * ```\n   */\n  async sendTransaction(transaction: Transaction) {\n    if (!transaction.isSigned() || !transaction) {\n      throw new Error('transaction is not signed or not exist');\n    }\n    const result = await this.messenger.send(\n      RPCMethod.SendRawTransaction,\n      [transaction.getRawTransaction()],\n      this.messenger.chainPrefix,\n      typeof transaction.txParams.shardID === 'string'\n        ? Number.parseInt(transaction.txParams.shardID, 10)\n        : transaction.txParams.shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Sends a raw transaction to the network.\n   *\n   * @param transaction `Object` - The transaction object to send:\n   * @return The **callbalck** will return the 32 bytes transaction hash\n   *\n   * @example\n   * ```javascript\n   * // add privateKey to wallet\n   * const privateKey = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n   * hmy.wallet.addByPrivateKey(privateKey);\n   *\n   * async function transfer() {\n   *   const txn = hmy.transactions.newTx({\n   *     //  token send to\n   *     to: 'one166axnkjmghkf3df7xfvd0hn4dft8kemrza4cd2',\n   *     // amount to send\n   *     value: '10000',\n   *     // gas limit, you can use string\n   *     gasLimit: '210000',\n   *     // send token from shardID\n   *     shardID: 0,\n   *     // send token to toShardID\n   *     toShardID: 0,\n   *     // gas Price, you can use Unit class, and use Gwei, then remember to use toWei(), which will be transformed to BN\n   *     gasPrice: new hmy.utils.Unit('100').asGwei().toWei(),\n   *   });\n   *\n   *   // sign the transaction use wallet;\n   *   const signedTxn = await hmy.wallet.signTransaction(txn);\n   *   recovered = signedTxn.recover(signedTxn.rawTransaction);\n   *\n   *   const txnHash = await hmy.blockchain.sendRawTransaction(recovered);\n   *   console.log(txnHash);\n   * }\n   *\n   * transfer();\n   * ```\n   */\n  async sendRawTransaction(transaction: Transaction) {\n    if (!transaction.isSigned() || !transaction) {\n      throw new Error('transaction is not signed or not exist');\n    }\n    const [txn, result] = await transaction.sendTransaction();\n    if (txn.isPending()) {\n      return result;\n    }\n  }\n\n  /**\n   * send a transaction and check whether it exists\n   *\n   * @param transaction `Object` - The transaction object to send:\n   * @return The **callbalck** will return the 32 bytes transaction hash\n   *\n   * @example\n   * ```javascript\n   * // add privateKey to wallet\n   * const privateKey = '45e497bd45a9049bcb649016594489ac67b9f052a6cdf5cb74ee2427a60bf25e';\n   * hmy.wallet.addByPrivateKey(privateKey);\n   *\n   * async function transfer() {\n   *   const txn = hmy.transactions.newTx({\n   *     //  token send to\n   *     to: 'one166axnkjmghkf3df7xfvd0hn4dft8kemrza4cd2',\n   *     // amount to send\n   *     value: '10000',\n   *     // gas limit, you can use string\n   *     gasLimit: '210000',\n   *     // send token from shardID\n   *     shardID: 0,\n   *     // send token to toShardID\n   *     toShardID: 0,\n   *     // gas Price, you can use Unit class, and use Gwei, then remember to use toWei(), which will be transformed to BN\n   *     gasPrice: new hmy.utils.Unit('100').asGwei().toWei(),\n   *   });\n   *\n   *   // sign the transaction use wallet;\n   *   const signedTxn = await hmy.wallet.signTransaction(txn);\n   *   const txnHash = await hmy.blockchain.createObservedTransaction(signedTxn);\n   *   console.log(txnHash);\n   * }\n   *\n   * transfer();\n   * ```\n   */\n  createObservedTransaction(transaction: Transaction) {\n    try {\n      transaction.sendTransaction().then((response: any) => {\n        const [txReturned, TranID] = response;\n\n        txReturned.confirm(TranID).then((txConfirmed: Transaction) => {\n          transaction.emitter.resolve(txConfirmed);\n        });\n      });\n      return transaction.emitter;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * send raw staking transaction\n   *\n   * @param staking\n   * @ignore\n   *\n   * @warning\n   * ```\n   * At present, this function is not implement yet, will Coming soon!!!\n   * ```\n   */\n  async sendRawStakingTransaction(staking: StakingTransaction) {\n    if (!staking.isSigned() || !staking) {\n      throw new Error('staking transaction is not signed or not exist');\n    }\n    const [txn, result] = await staking.sendTransaction();\n    if (txn.isPending()) {\n      return result;\n    }\n  }\n\n  /**\n   * send raw staking transaction and check whether it exists\n   *\n   * @param staking\n   * @ignore\n   *\n   * @warning\n   * ```\n   * At present, this function is not implement yet, will Coming soon!!!\n   * ```\n   */\n  createObservedStakingTransaction(staking: StakingTransaction) {\n    try {\n      staking.sendTransaction().then((response: any) => {\n        const [txReturned, TranID] = response;\n\n        txReturned.confirm(TranID).then((txConfirmed: StakingTransaction) => {\n          staking.emitter.resolve(txConfirmed);\n        });\n      });\n      return staking.emitter;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Executes a message call or transaction and returns the amount of the gas used.\n   *\n   * @param to the address will send to\n   * @param data the data will send to that address\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @return `promise` -  the used gas for the simulated call/transaction.\n   *\n   * @warning\n   * ```\n   * At present, this function hmy_estimateGas is not implement yet, will Coming soon!!!\n   * ```\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.estimateGas({\n   *   to: 'one1d0kw95t6kkljmkk9vu0zv25jraut8ngv5vrs5g',\n   *   data: '0xc6888fa10000000000000000000000000000000000000000000000000000000000000003'\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  @assertObject({\n    to: ['isValidAddress', AssertType.optional],\n    data: ['isHex', AssertType.optional],\n    shardID: ['isNumber', AssertType.optional],\n  })\n  async estimateGas({\n    to,\n    data,\n    shardID = this.messenger.currentShard,\n  }: {\n    to: string;\n    data: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.EstimateGas,\n      [{ to: getAddress(to).checksum, data }],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Returns the current gas price oracle. The gas price is determined by the last few blocks median gas price.\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   * @return `promise` - Number string of the current gas price in wei.\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.gasPrice().then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  async gasPrice(shardID: number = this.messenger.currentShard) {\n    const result = await this.messenger.send(\n      RPCMethod.GasPrice,\n      [],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Executes a message call transaction,\n   * which is directly executed in the VM of the node, but never mined into the blockchain.\n   *\n   * @param payload some data you want put into these fucntions\n   * @param blockNumber by default it's `latest`\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   *\n   * @example\n   * ```javascript\n   * hmy.blockchain.call({\n   *   to: \"0x08AE1abFE01aEA60a47663bCe0794eCCD5763c19\",\n   * }).then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n  async call({\n    payload,\n    blockNumber = DefaultBlockParams.latest,\n    shardID = this.messenger.currentShard,\n  }: {\n    payload: any;\n    blockNumber?: string;\n    shardID?: number;\n  }) {\n    const result = await this.messenger.send(\n      RPCMethod.Call,\n      [payload, blockNumber],\n      this.messenger.chainPrefix,\n      shardID,\n    );\n    return this.getRpcResult(result);\n  }\n\n  /**\n   * Return new pending Transactions\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   *\n   * @example\n   * ```javascript\n   * const hmy = new Harmony(\n   *   // rpc url\n   *   'ws://api.s0.b.hmny.io/',\n   *   {\n   *     // chainType set to Harmony\n   *     chainType: ChainType.Harmony,\n   *     // chainType set to HmyLocal\n   *     chainId: ChainID.HmyLocal,\n   *   },\n   * );\n   *\n   * const tmp = hmy.blockchain.newPendingTransactions();\n   * console.log(tmp)\n   * ```\n   */\n  newPendingTransactions(shardID: number = this.messenger.currentShard) {\n    if (this.messenger.provider instanceof WSProvider) {\n      return new NewPendingTransactions(this.messenger, shardID);\n    } else {\n      throw new Error('HttpProvider does not support this feature');\n    }\n  }\n\n  /**\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   *\n   * @example\n   * ```javascript\n   * const hmy = new Harmony(\n   *   // rpc url\n   *   'ws://api.s0.b.hmny.io/',\n   *   {\n   *     // chainType set to Harmony\n   *     chainType: ChainType.Harmony,\n   *     // chainType set to HmyLocal\n   *     chainId: ChainID.HmyLocal,\n   *   },\n   * );\n   *\n   * const tmp = hmy.blockchain.newBlockHeaders();\n   * console.log(tmp)\n   * ```\n   */\n  newBlockHeaders(shardID: number = this.messenger.currentShard) {\n    if (this.messenger.provider instanceof WSProvider) {\n      return new NewHeaders(this.messenger, shardID);\n    } else {\n      throw new Error('HttpProvider does not support this feature');\n    }\n  }\n\n  /**\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   *\n   * @example\n   * ```javascript\n   * const hmy = new Harmony(\n   *   // rpc url\n   *   'ws://api.s0.b.hmny.io/',\n   *   {\n   *     // chainType set to Harmony\n   *     chainType: ChainType.Harmony,\n   *     // chainType set to HmyLocal\n   *     chainId: ChainID.HmyLocal,\n   *   },\n   * );\n   *\n   * const tmp = hmy.blockchain.syncing();\n   * console.log(tmp)\n   * ```\n   */\n  syncing(shardID: number = this.messenger.currentShard) {\n    if (this.messenger.provider instanceof WSProvider) {\n      return new Syncing(this.messenger, shardID);\n    } else {\n      throw new Error('HttpProvider does not support this feature');\n    }\n  }\n\n  /**\n   *\n   * @param shardID `shardID` is binding with the endpoint, IGNORE it!\n   *\n   * @example\n   * ```javascript\n   * const hmy = new Harmony(\n   *   // rpc url\n   *   'ws://api.s0.b.hmny.io/',\n   *   {\n   *     // chainType set to Harmony\n   *     chainType: ChainType.Harmony,\n   *     // chainType set to HmyLocal\n   *     chainId: ChainID.HmyLocal,\n   *   },\n   * );\n   *\n   * const tmp = hmy.blockchain.logs({\n   *   from: '0x12'\n   * });\n   * console.log(tmp)\n   * ```\n   */\n  logs(options: any, shardID: number = this.messenger.currentShard) {\n    if (this.messenger.provider instanceof WSProvider) {\n      return new LogSub(options, this.messenger, shardID);\n    } else {\n      throw new Error('HttpProvider does not support this feature');\n    }\n  }\n}\n\nexport { Blockchain };\n","/**\n * @packageDocumentation\n * @module harmony-core\n */\n\nimport * as crypto from '@harmony-js/crypto';\nimport * as utils from '@harmony-js/utils';\n\nimport { Provider, HttpProvider, Messenger, WSProvider, ShardingItem } from '@harmony-js/network';\nimport { TransactionFactory, Transaction } from '@harmony-js/transaction';\nimport { StakingTransaction, StakingFactory } from '@harmony-js/staking';\nimport { ContractFactory, Contract } from '@harmony-js/contract';\nimport { Wallet, Account } from '@harmony-js/account';\nimport { Blockchain } from './blockchain';\nimport { HarmonyConfig } from './util';\n\nexport class Harmony extends utils.HarmonyCore {\n  /**@ignore*/\n  Modules = {\n    HttpProvider,\n    WSProvider,\n    Messenger,\n    Blockchain,\n    TransactionFactory,\n    StakingFactory,\n    Wallet,\n    Transaction,\n    StakingTransaction,\n    Account,\n    Contract,\n  };\n  /**@ignore*/\n  messenger: Messenger;\n  /**@ignore*/\n  transactions: TransactionFactory;\n  /**@ignore*/\n  stakings: StakingFactory;\n  /**@ignore*/\n  wallet: Wallet;\n  /**@ignore*/\n  blockchain: Blockchain;\n  /**@ignore*/\n  contracts: ContractFactory;\n  /**@ignore*/\n  crypto: any;\n  /**@ignore*/\n  utils: any;\n  /**@ignore*/\n  defaultShardID?: number;\n  /**@ignore*/\n  private provider: HttpProvider | WSProvider;\n\n  /**\n   * Create a harmony instance\n   *\n   * @param url The end-points of the hmy blockchain\n   * @param config set up `ChainID` and `ChainType`, typically we can use the default values\n   *\n   * @example\n   * ```\n   * // import or require Harmony class\n   * const { Harmony } = require('@harmony-js/core');\n   *\n   * // import or require settings\n   * const { ChainID, ChainType } = require('@harmony-js/utils');\n   *\n   * // Initialize the Harmony instance\n   * const hmy = new Harmony(\n   *   // rpc url:\n   *   // local: http://localhost:9500\n   *   // testnet: https://api.s0.b.hmny.io/\n   *   // mainnet: https://api.s0.t.hmny.io/\n   *   'http://localhost:9500',\n   *   {\n   *     // chainType set to Harmony\n   *     chainType: ChainType.Harmony,\n   *     // chainType set to HmyLocal\n   *     chainId: ChainID.HmyLocal,\n   *   },\n   * );\n   * ```\n   */\n  constructor(\n    url: string,\n    config: HarmonyConfig = {\n      chainId: utils.defaultConfig.Default.Chain_ID,\n      chainType: utils.defaultConfig.Default.Chain_Type,\n    },\n  ) {\n    super(config.chainType, config.chainId);\n\n    const providerUrl = config.chainUrl || url || utils.defaultConfig.Default.Chain_URL;\n\n    this.provider = new Provider(providerUrl).provider;\n    this.messenger = new Messenger(this.provider, this.chainType, this.chainId);\n    this.blockchain = new Blockchain(this.messenger);\n    this.transactions = new TransactionFactory(this.messenger);\n    this.stakings = new StakingFactory(this.messenger);\n    this.wallet = new Wallet(this.messenger);\n    this.contracts = new ContractFactory(this.wallet);\n    this.crypto = crypto;\n    this.utils = utils;\n    this.defaultShardID = config.shardID;\n    if (this.defaultShardID !== undefined) {\n      this.setShardID(this.defaultShardID);\n    }\n  }\n\n  /**\n   * Will change the provider for its module.\n   *\n   * @param provider a valid provider, you can replace it with your own working node\n   *\n   * @example\n   * ```javascript\n   * const tmp = hmy.setProvider('http://localhost:9500');\n   * ```\n   */\n  public setProvider(provider: string | HttpProvider | WSProvider): void {\n    this.provider = new Provider(provider).provider;\n    this.messenger.setProvider(this.provider);\n    this.setMessenger(this.messenger);\n  }\n\n  /**\n   * set the chainID\n   * \n   * @hint\n   * ```\n   * Default = 0,\n   * EthMainnet = 1,\n    Morden = 2,\n    Ropsten = 3,\n    Rinkeby = 4,\n    RootstockMainnet = 30,\n    RootstockTestnet = 31,\n    Kovan = 42,\n    EtcMainnet = 61,\n    EtcTestnet = 62,\n    Geth = 1337,\n    Ganache = 0,\n    HmyMainnet = 1,\n    HmyTestnet = 2,\n    HmyLocal = 2,\n    HmyPangaea = 3\n   * ```\n   * @param chainId \n   * \n   * @example\n   * ```\n   * hmy.setChainId(2);\n   * ```\n   */\n  public setChainId(chainId: utils.ChainID) {\n    this.chainId = chainId;\n    this.messenger.setChainId(this.chainId);\n    this.setMessenger(this.messenger);\n  }\n\n  /**\n   * Change the Shard ID\n   *\n   * @example\n   * ```\n   * hmy.setShardID(2);\n   * ```\n   */\n  public setShardID(shardID: number) {\n    this.defaultShardID = shardID;\n    this.messenger.setDefaultShardID(this.defaultShardID);\n    this.setMessenger(this.messenger);\n  }\n\n  /**\n   * set the chainType\n   *\n   * @param chainType `hmy` or `eth`\n   *\n   * @example\n   * ```\n   * // set chainType to hmy\n   * hmy.setChainType('hmy');\n   * // set chainType to eth\n   * hmy.setChainType('eth');\n   * ```\n   */\n  public setChainType(chainType: utils.ChainType) {\n    this.chainType = chainType;\n    this.messenger.setChainType(this.chainType);\n    this.setMessenger(this.messenger);\n  }\n\n  /**\n   * Set the sharding Structure\n   *\n   * @param shardingStructures The array of information of sharding structures\n   *\n   * @example\n   * ```javascript\n   * hmy.shardingStructures([\n   *   {\"current\":true,\"http\":\"http://127.0.0.1:9500\",\n   *    \"shardID\":0,\"ws\":\"ws://127.0.0.1:9800\"},\n   *   {\"current\":false,\"http\":\"http://127.0.0.1:9501\",\n   *    \"shardID\":1,\"ws\":\"ws://127.0.0.1:9801\"}\n   * ]);\n   * ```\n   */\n  public shardingStructures(shardingStructures: ShardingItem[]) {\n    for (const shard of shardingStructures) {\n      const shardID =\n        typeof shard.shardID === 'string' ? Number.parseInt(shard.shardID, 10) : shard.shardID;\n      this.messenger.shardProviders.set(shardID, {\n        current: shard.current !== undefined ? shard.current : false,\n        shardID,\n        http: shard.http,\n        ws: shard.ws,\n      });\n    }\n    this.setMessenger(this.messenger);\n  }\n\n  /**@ignore*/\n  private setMessenger(messenger: Messenger) {\n    this.blockchain.setMessenger(messenger);\n    this.wallet.setMessenger(messenger);\n    this.transactions.setMessenger(messenger);\n    this.stakings.setMessenger(messenger);\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-core\n * @hidden\n */\n\nimport {\n  HttpProvider,\n  WSProvider,\n  RPCRequestPayload,\n  ResponseMiddleware,\n} from '@harmony-js/network';\n\nimport { ChainID, ChainType, Unit, isBech32Address } from '@harmony-js/utils';\nimport { HDNode } from '@harmony-js/account';\nimport { fromBech32, HRP } from '@harmony-js/crypto';\n\nconst packageInfo = { version: '1.0.0' };\n\nexport interface ArgsResolver {\n  newArgs: any;\n  id: number;\n  params: any;\n  newMethod: string;\n  callback: (error: any, res?: any) => void;\n}\n\nexport interface HDOptions {\n  menmonic?: string;\n  index: number;\n  addressCount: number;\n}\n\nexport interface ChainOptions {\n  shardID: number;\n  chainType: ChainType;\n  chainId: ChainID;\n}\n\nexport interface TransactionOptions {\n  gasLimit: string;\n  gasPrice: string;\n}\n\nexport class TruffleProvider extends HDNode {\n  constructor(\n    provider: string | HttpProvider | WSProvider = 'http://localhost:9500',\n    hdOptions: HDOptions = {\n      menmonic: undefined,\n      index: 0,\n      addressCount: 1,\n    },\n    chainOptions: ChainOptions = {\n      shardID: 0,\n      chainType: ChainType.Harmony,\n      chainId: ChainID.HmyLocal,\n    },\n    transactionOptions: TransactionOptions = {\n      gasLimit: '10000000',\n      gasPrice: '20000000000',\n    },\n  ) {\n    super(\n      provider,\n      hdOptions.menmonic,\n      hdOptions.index,\n      hdOptions.addressCount,\n      chainOptions.shardID,\n      chainOptions.chainType,\n      chainOptions.chainId,\n      transactionOptions.gasLimit,\n      transactionOptions.gasPrice,\n    );\n  }\n  async send(...args: [RPCRequestPayload<any>, any]) {\n    const { newArgs, id, params, newMethod, callback } = this.resolveArgs(...args);\n\n    switch (newMethod) {\n      case 'hmy_accounts': {\n        const accounts = this.getAccounts();\n        callback(null, {\n          result: accounts,\n          id,\n          jsonrpc: '2.0',\n        });\n        return {\n          result: accounts,\n          id,\n          jsonrpc: '2.0',\n        };\n        // break;\n      }\n      case 'hmy_sendTransaction': {\n        const txObj = params[0];\n        const rawTxn = await this.signTransaction(txObj);\n        const result = await this.provider.send(\n          {\n            id,\n            method: 'hmy_sendRawTransaction',\n            params: [rawTxn],\n            jsonrpc: '2.0',\n          },\n          (err: any, res: ResponseMiddleware | any) => this.resolveCallback(err, res, callback),\n        );\n        return this.resolveResult(result);\n\n        //  break;\n      }\n      case 'hmy_getTransactionReceipt': {\n        const result = await this.provider.send(\n          {\n            id,\n            method: 'hmy_getTransactionReceipt',\n            params: [params[0]],\n            jsonrpc: '2.0',\n          },\n          (err: any, res: any) => {\n            try {\n              if (err) {\n                callback(err);\n              }\n              const response = this.resolveResult(res);\n\n              if (response.result !== null) {\n                response.result.status = '0x1';\n              }\n              callback(null, response);\n            } catch (error) {\n              throw error;\n            }\n          },\n        );\n        return this.resolveResult(result);\n      }\n      case 'net_version': {\n        callback(null, {\n          result: String(this.messenger.chainId),\n          id,\n          jsonrpc: '2.0',\n        });\n        return {\n          result: String(this.messenger.chainId),\n          id,\n          jsonrpc: '2.0',\n        };\n      }\n      case 'web3_clientVersion': {\n        callback(null, {\n          result: `Harmony/${packageInfo.version}/@harmony-js`,\n          id,\n          jsonrpc: '2.0',\n        });\n        return {\n          result: `Harmony/${packageInfo.version}/@harmony-js`,\n          id,\n          jsonrpc: '2.0',\n        };\n      }\n      case 'hmy_getBlockByNumber': {\n        const result = await this.provider.send(newArgs, (err: any, res: any) => {\n          try {\n            if (err) {\n              callback(err);\n            }\n            const response = this.resolveResult(res);\n\n            if (\n              new Unit(response.result.gasLimit)\n                .asWei()\n                .toWei()\n                .gt(new Unit(this.gasLimit).asWei().toWei())\n            ) {\n              response.result.gasLimit = `0x${new Unit(this.gasLimit)\n                .asWei()\n                .toWei()\n                .toString('hex')}`;\n            }\n            if (isBech32Address(response.result.miner)) {\n              response.result.miner = fromBech32(response.result.miner, HRP);\n            }\n            callback(null, response);\n          } catch (error) {\n            throw error;\n          }\n        });\n        return this.resolveResult(result);\n      }\n\n      default: {\n        // hmy_getBlockByNumber\n\n        const result = await this.provider.send(\n          newArgs,\n          (err: any, res: ResponseMiddleware | any) => this.resolveCallback(err, res, callback),\n        );\n\n        return this.resolveResult(result);\n        //  break;\n      }\n    }\n  }\n\n  sendAsync(...args: [RPCRequestPayload<any>, any]) {\n    return this.send(...args);\n  }\n\n  resolveArgs(...args: [RPCRequestPayload<any>, any]): ArgsResolver {\n    const method = args[0].method;\n    const params = args[0].params;\n    let newMethod: string = method;\n    if (method.startsWith('eth')) {\n      newMethod = method.replace('eth', 'hmy');\n    }\n    args[0].method = newMethod;\n\n    const { id } = args[0];\n\n    return {\n      newArgs: args[0],\n      id,\n      params,\n      newMethod,\n      callback: args[1],\n    };\n  }\n\n  resolveResult = (response: ResponseMiddleware | any) => {\n    const final = response.getRaw || response;\n    delete final.req;\n    delete final.responseType;\n    return final;\n  };\n  resolveCallback = (\n    err: any,\n    res: any,\n    callback: (error: any, res?: ResponseMiddleware | any) => void,\n  ) => {\n    try {\n      if (err) {\n        callback(err);\n      }\n      const response = this.resolveResult(res);\n      callback(null, response);\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","/**\n * @packageDocumentation\n * @module harmony-core\n */\n\nimport {\n  HttpProvider,\n  WSProvider,\n  Messenger,\n  Provider,\n  RPCMethod,\n  ShardingItem,\n} from '@harmony-js/network';\n\nimport * as crypto from '@harmony-js/crypto';\nimport * as utils from '@harmony-js/utils';\n\nimport { Transaction, TransactionFactory } from '@harmony-js/transaction';\nimport { Blockchain } from './blockchain';\nimport { ContractFactory } from '@harmony-js/contract';\nimport { HarmonyConfig } from './util';\n\n/** @hidden */\nexport enum ExtensionType {\n  MathWallet = 'MathWallet',\n  OneWallet = 'OneWallet',\n}\n\n/** @hidden */\nexport interface ExtensionAccount {\n  address: 'string';\n  name: 'string';\n}\n\n/** @hidden */\nexport interface ExtensionNetwork {\n  chain_url: string;\n  net_version: number;\n}\n\n/** @hidden */\nexport interface ExtensionInterface {\n  signTransaction: (\n    transaction: Transaction,\n    updateNonce: boolean,\n    encodeMode: string,\n    blockNumber: string,\n  ) => Promise<Transaction>;\n  getAccount: () => Promise<ExtensionAccount>;\n  forgetIdentity: () => Promise<void>;\n  messenger?: Messenger;\n  version: string;\n  isMathWallet?: boolean;\n  isOneWallet?: boolean;\n  network: ExtensionNetwork;\n}\n\nexport class HarmonyExtension {\n  /**@ignore*/\n  extensionType: ExtensionType | null;\n  /**@ignore*/\n  wallet: ExtensionInterface;\n  /**@ignore*/\n  provider: HttpProvider | WSProvider;\n  /**@ignore*/\n  messenger: Messenger;\n  /**@ignore*/\n  blockchain: Blockchain;\n  /**@ignore*/\n  transactions: TransactionFactory;\n  /**@ignore*/\n  contracts: ContractFactory;\n  /**@ignore*/\n  crypto: any;\n  /**@ignore*/\n  utils: any;\n  /**@ignore*/\n  defaultShardID?: number;\n\n  /**\n   * Create an blockchain instance support wallet injection\n   *\n   * @param wallet could be MathWallet or OneWallet instance\n   * @param config (optional), using default `Chain_Id` and `Chain_Type`\n   *\n   * @example\n   * ```javascript\n   * // Using Mathwallet instance\n   * export const initEx = async() => {\n   *   hmyEx = new HarmonyExtension(window.harmony);\n   * }\n   * // Using OneWallet instance\n   * export const initEx = async() => {\n   *   hmyEx = new HarmonyExtension(window.onewallet);\n   * }\n   * ```\n   */\n  constructor(\n    wallet: ExtensionInterface,\n    config: HarmonyConfig = {\n      chainId: utils.defaultConfig.Default.Chain_ID,\n      chainType: utils.defaultConfig.Default.Chain_Type,\n    },\n  ) {\n    this.extensionType = null;\n    this.wallet = wallet;\n    // check if it is mathwallet or onewallet\n    this.isExtension(this.wallet);\n\n    if (wallet.messenger) {\n      this.provider = wallet.messenger.provider;\n      this.messenger = wallet.messenger;\n    } else {\n      this.provider = new Provider(config.chainUrl || wallet.network.chain_url).provider;\n      this.messenger = new Messenger(this.provider, config.chainType, config.chainId);\n    }\n    this.wallet.messenger = this.messenger;\n    this.blockchain = new Blockchain(this.messenger);\n    this.transactions = new TransactionFactory(this.messenger);\n    this.contracts = new ContractFactory(this.wallet);\n    this.crypto = crypto;\n    this.utils = utils;\n  }\n\n  /**\n   * Will change the provider for its module.\n   *\n   * @param provider a valid provider, you can replace it with your own working node\n   *\n   * @example\n   * ```javascript\n   * const tmp = hmyEx.setProvider('http://localhost:9500');\n   * ```\n   */\n  public setProvider(provider: string | HttpProvider | WSProvider): void {\n    this.provider = new Provider(provider).provider;\n    this.messenger.setProvider(this.provider);\n    this.setMessenger(this.messenger);\n  }\n\n  /**\n   * Change the Shard ID\n   *\n   * @example\n   * ```\n   * hmyEx.setShardID(2);\n   * ```\n   */\n  public setShardID(shardID: number) {\n    this.defaultShardID = shardID;\n    this.messenger.setDefaultShardID(this.defaultShardID);\n    this.setMessenger(this.messenger);\n  }\n\n  public isExtension(wallet: ExtensionInterface) {\n    let isExtension = false;\n    this.extensionType = null;\n    if (wallet.isMathWallet || wallet.isOneWallet) {\n      isExtension = true;\n      if (wallet.isMathWallet) this.extensionType = ExtensionType.MathWallet;\n      else this.extensionType = ExtensionType.OneWallet;\n\n      // remake signTransaction of MathWallet or OneWallet\n      const { signTransaction } = this.wallet;\n      this.wallet.signTransaction = async (\n        transaction: Transaction,\n        updateNonce: boolean = true,\n        encodeMode: string = 'rlp',\n        blockNumber: string = 'latest',\n      ) => {\n        const extensionAccount = await this.wallet.getAccount();\n\n        if (updateNonce) {\n          const nonce = await this.messenger.send(\n            RPCMethod.GetTransactionCount,\n            [crypto.getAddress(extensionAccount.address).checksum, blockNumber],\n            this.messenger.chainPrefix,\n            typeof transaction.txParams.shardID === 'string'\n              ? Number.parseInt(transaction.txParams.shardID, 10)\n              : transaction.txParams.shardID,\n          );\n          transaction.setParams({\n            ...transaction.txParams,\n            from: crypto.getAddress(extensionAccount.address).bech32,\n            nonce: Number.parseInt(utils.hexToNumber(nonce.result), 10),\n          });\n        } else {\n          transaction.setParams({\n            ...transaction.txParams,\n            from: crypto.getAddress(extensionAccount.address).bech32,\n          });\n        }\n\n        return signTransaction(transaction, false, encodeMode, blockNumber);\n      };\n    }\n    if (!isExtension) {\n      throw new Error('Extension is not found');\n    }\n    return;\n  }\n\n  /**\n   * Get the wallet account\n   *\n   * @example\n   * ```javascript\n   * const account = hmyEx.login();\n   * console.log(account);\n   * ```\n   */\n  public async login() {\n    const account = await this.wallet.getAccount();\n    // Use address\n    return account;\n  }\n\n  /**\n   * Log out the wallet account\n   *\n   * @example\n   * ```javascript\n   * hmyEx.logout();\n   * ```\n   */\n  public async logout() {\n    await this.wallet.forgetIdentity();\n  }\n\n  /**\n   * Set the sharding Structure\n   *\n   * @param shardingStructures The array of information of sharding structures\n   *\n   * @example\n   * ```javascript\n   * hmyEx.shardingStructures([\n   *   {\"current\":true,\"http\":\"http://127.0.0.1:9500\",\n   *    \"shardID\":0,\"ws\":\"ws://127.0.0.1:9800\"},\n   *   {\"current\":false,\"http\":\"http://127.0.0.1:9501\",\n   *    \"shardID\":1,\"ws\":\"ws://127.0.0.1:9801\"}\n   * ]);\n   * ```\n   */\n  public shardingStructures(shardingStructures: ShardingItem[]) {\n    for (const shard of shardingStructures) {\n      const shardID =\n        typeof shard.shardID === 'string' ? Number.parseInt(shard.shardID, 10) : shard.shardID;\n      this.messenger.shardProviders.set(shardID, {\n        current: shard.current !== undefined ? shard.current : false,\n        shardID,\n        http: shard.http,\n        ws: shard.ws,\n      });\n    }\n    this.setMessenger(this.messenger);\n  }\n\n  /**@ignore*/\n  private setMessenger(messenger: Messenger) {\n    this.blockchain.setMessenger(messenger);\n    this.wallet.messenger = messenger;\n    this.transactions.setMessenger(messenger);\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-core\n * @hidden\n */\n\nimport { HttpProvider, Messenger } from '@harmony-js/network';\nimport { TransactionFactory, Transaction } from '@harmony-js/transaction';\nimport { Wallet, Account } from '@harmony-js/account';\nimport { ChainType, ChainID } from '@harmony-js/utils';\nimport { Blockchain } from './blockchain';\n\nexport interface HarmonyModule {\n  HttpProvider: HttpProvider;\n  Messenger: Messenger;\n  Blockchain: Blockchain;\n  TransactionFactory: TransactionFactory;\n  Wallet: Wallet;\n  Transaction: Transaction;\n  Account: Account;\n}\n\nexport const enum UrlType {\n  http,\n  ws,\n}\n\nexport interface HarmonySetting<T extends ChainType, I extends ChainID> {\n  type: T;\n  id: I;\n}\n","/**\n * @packageDocumentation\n * @module harmony-core\n * @hidden\n */\n\nexport * from './harmony';\nexport * from './blockchain';\nexport * from './truffleProvider';\nexport * from './harmonyExtension';\nexport * from './types';\n"],"names":["ResponseMiddleware","getAddress","transaction","staking","WSProvider","NewPendingTransactions","NewHeaders","Syncing","LogSub","assertObject","utils.defaultConfig","Provider","Messenger","TransactionFactory","StakingFactory","Wallet","ContractFactory","utils.HarmonyCore","Unit","isBech32Address","fromBech32","HRP","HDNode","ExtensionType","crypto.getAddress","utils.hexToNumber","account","UrlType"],"mappings":"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"}