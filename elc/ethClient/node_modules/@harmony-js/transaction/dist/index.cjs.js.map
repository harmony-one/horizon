{"version":3,"file":"index.cjs.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/utils.ts","../src/transactionBase.ts","../src/transaction.ts","../src/shardingTransaction.ts","../src/factory.ts","../src/types.ts","../src/abstractTransaction.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @packageDocumentation\n * @module harmony-transaction\n * @hidden\n */\n\nimport { hexToNumber, isHex, isAddress, strip0x, ChainType } from '@harmony-js/utils';\nimport {\n  decode,\n  encode,\n  keccak256,\n  hexlify,\n  BN,\n  hexZeroPad,\n  recoverAddress,\n  Signature,\n  getAddress,\n  sign,\n} from '@harmony-js/crypto';\nimport { HttpProvider, Messenger } from '@harmony-js/network';\nimport { TxParams } from './types';\nimport { Transaction } from './transaction';\n\nexport const transactionFields = [\n  { name: 'nonce', length: 32, fix: false },\n  { name: 'gasPrice', length: 32, fix: false, transform: 'hex' },\n  { name: 'gasLimit', length: 32, fix: false, transform: 'hex' },\n  { name: 'shardID', length: 16, fix: false },\n  // recover it after main repo fix\n  { name: 'toShardID', length: 16, fix: false },\n  { name: 'to', length: 20, fix: true },\n  { name: 'value', length: 32, fix: false, transform: 'hex' },\n  { name: 'data', fix: false },\n];\n\nexport const transactionFieldsETH = [\n  { name: 'nonce', length: 32, fix: false },\n  { name: 'gasPrice', length: 32, fix: false, transform: 'hex' },\n  { name: 'gasLimit', length: 32, fix: false, transform: 'hex' },\n  { name: 'to', length: 20, fix: true },\n  { name: 'value', length: 32, fix: false, transform: 'hex' },\n  { name: 'data', fix: false },\n];\n\nexport const handleNumber = (value: string) => {\n  if (isHex(value) && value === '0x') {\n    return hexToNumber('0x00');\n  } else if (isHex(value) && value !== '0x') {\n    return hexToNumber(value);\n  } else {\n    return value;\n  }\n};\n\nexport const handleAddress = (value: string): string => {\n  if (value === '0x') {\n    return '0x';\n  } else if (isAddress(value)) {\n    return value;\n  } else {\n    return '0x';\n  }\n};\n\nexport const recover = (rawTransaction: string) => {\n  const transaction = decode(rawTransaction);\n  if (transaction.length !== 11 && transaction.length !== 8) {\n    throw new Error('invalid rawTransaction');\n  }\n\n  const tx: TxParams = {\n    id: '0x',\n    from: '0x',\n    rawTransaction: '0x',\n    unsignedRawTransaction: '0x',\n    nonce: new BN(strip0x(handleNumber(transaction[0]))).toNumber(),\n    gasPrice: new BN(strip0x(handleNumber(transaction[1]))),\n    gasLimit: new BN(strip0x(handleNumber(transaction[2]))),\n    shardID: new BN(strip0x(handleNumber(transaction[3]))).toNumber(),\n    toShardID: new BN(strip0x(handleNumber(transaction[4]))).toNumber(),\n    to:\n      handleAddress(transaction[5]) !== '0x'\n        ? getAddress(handleAddress(transaction[5])).checksum\n        : '0x',\n    value: new BN(strip0x(handleNumber(transaction[6]))),\n    data: transaction[7],\n    chainId: 0,\n    signature: {\n      r: '',\n      s: '',\n      recoveryParam: 0,\n      v: 0,\n    },\n  };\n\n  // Legacy unsigned transaction\n  if (transaction.length === 8) {\n    tx.unsignedRawTransaction = rawTransaction;\n    return tx;\n  }\n\n  try {\n    tx.signature.v = new BN(strip0x(handleNumber(transaction[8]))).toNumber();\n  } catch (error) {\n    throw error;\n  }\n\n  tx.signature.r = hexZeroPad(transaction[9], 32);\n  tx.signature.s = hexZeroPad(transaction[10], 32);\n\n  if (\n    new BN(strip0x(handleNumber(tx.signature.r))).isZero() &&\n    new BN(strip0x(handleNumber(tx.signature.s))).isZero()\n  ) {\n    // EIP-155 unsigned transaction\n    tx.chainId = tx.signature.v;\n    tx.signature.v = 0;\n  } else {\n    // Signed Tranasaction\n\n    tx.chainId = Math.floor((tx.signature.v - 35) / 2);\n    if (tx.chainId < 0) {\n      tx.chainId = 0;\n    }\n\n    let recoveryParam = tx.signature.v - 27;\n\n    const raw = transaction.slice(0, 8);\n\n    if (tx.chainId !== 0) {\n      raw.push(hexlify(tx.chainId));\n      raw.push('0x');\n      raw.push('0x');\n      recoveryParam -= tx.chainId * 2 + 8;\n    }\n\n    const digest = keccak256(encode(raw));\n    try {\n      const recoveredFrom = recoverAddress(digest, {\n        r: hexlify(tx.signature.r),\n        s: hexlify(tx.signature.s),\n        recoveryParam,\n      });\n      tx.from = recoveredFrom === '0x' ? '0x' : getAddress(recoveredFrom).checksum;\n    } catch (error) {\n      throw error;\n    }\n    tx.rawTransaction = rawTransaction;\n    tx.id = keccak256(rawTransaction);\n  }\n\n  return tx;\n};\n\nexport const recoverETH = (rawTransaction: string) => {\n  const transaction = decode(rawTransaction);\n  if (transaction.length !== 9 && transaction.length !== 6) {\n    throw new Error('invalid rawTransaction');\n  }\n\n  const tx: TxParams = {\n    id: '0x',\n    from: '0x',\n    rawTransaction: '0x',\n    unsignedRawTransaction: '0x',\n    nonce: new BN(strip0x(handleNumber(transaction[0]))).toNumber(),\n    gasPrice: new BN(strip0x(handleNumber(transaction[1]))),\n    gasLimit: new BN(strip0x(handleNumber(transaction[2]))),\n    shardID: 0,\n    toShardID: 0,\n\n    to:\n      handleAddress(transaction[3]) !== '0x'\n        ? getAddress(handleAddress(transaction[3])).checksum\n        : '0x',\n    value: new BN(strip0x(handleNumber(transaction[4]))),\n    data: transaction[5],\n    chainId: 0,\n    signature: {\n      r: '',\n      s: '',\n      recoveryParam: 0,\n      v: 0,\n    },\n  };\n\n  // Legacy unsigned transaction\n  if (transaction.length === 6) {\n    tx.unsignedRawTransaction = rawTransaction;\n    return tx;\n  }\n\n  try {\n    tx.signature.v = new BN(strip0x(handleNumber(transaction[6]))).toNumber();\n  } catch (error) {\n    throw error;\n  }\n\n  tx.signature.r = hexZeroPad(transaction[7], 32);\n  tx.signature.s = hexZeroPad(transaction[8], 32);\n\n  if (\n    new BN(strip0x(handleNumber(tx.signature.r))).isZero() &&\n    new BN(strip0x(handleNumber(tx.signature.s))).isZero()\n  ) {\n    // EIP-155 unsigned transaction\n    tx.chainId = tx.signature.v;\n    tx.signature.v = 0;\n  } else {\n    // Signed Tranasaction\n\n    tx.chainId = Math.floor((tx.signature.v - 35) / 2);\n    if (tx.chainId < 0) {\n      tx.chainId = 0;\n    }\n\n    let recoveryParam = tx.signature.v - 27;\n\n    const raw = transaction.slice(0, 6);\n\n    if (tx.chainId !== 0) {\n      raw.push(hexlify(tx.chainId));\n      raw.push('0x');\n      raw.push('0x');\n      recoveryParam -= tx.chainId * 2 + 8;\n    }\n\n    const digest = keccak256(encode(raw));\n    try {\n      const recoveredFrom = recoverAddress(digest, {\n        r: hexlify(tx.signature.r),\n        s: hexlify(tx.signature.s),\n        recoveryParam,\n      });\n      tx.from = recoveredFrom === '0x' ? '0x' : getAddress(recoveredFrom).checksum;\n    } catch (error) {\n      throw error;\n    }\n    tx.rawTransaction = rawTransaction;\n    tx.id = keccak256(rawTransaction);\n  }\n\n  return tx;\n};\n\nexport const sleep = async (ms: number) =>\n  new Promise((resolve) => {\n    setTimeout(() => resolve(), ms);\n  });\n\nexport enum TransactionEvents {\n  transactionHash = 'transactionHash',\n  error = 'error',\n  confirmation = 'confirmation',\n  receipt = 'receipt',\n  track = 'track',\n  cxConfirmation = 'cxConfirmation',\n  cxReceipt = 'cxReceipt',\n  cxTrack = 'cxTrack',\n}\n\nexport const defaultMessenger = new Messenger(\n  new HttpProvider('http://localhost:9500'),\n  ChainType.Harmony,\n);\n\nexport const RLPSign = (transaction: Transaction, prv: string): [Signature, string] => {\n  const [unsignedRawTransaction, raw] = transaction.getRLPUnsigned();\n  const regroup: TxParams = {\n    ...transaction.txParams,\n    unsignedRawTransaction,\n  };\n  transaction.setParams(regroup);\n  const signature = sign(keccak256(unsignedRawTransaction), prv);\n  const signed = transaction.getRLPSigned(raw, signature);\n  return [signature, signed];\n};\n","/**\n * @packageDocumentation\n * @module harmony-transaction\n * @hidden\n */\n\nimport { BN, getAddress, HarmonyAddress } from '@harmony-js/crypto';\nimport { hexToNumber } from '@harmony-js/utils';\nimport { Messenger, RPCMethod, Emitter, HttpProvider, NewHeaders } from '@harmony-js/network';\nimport { TxStatus, TransasctionReceipt } from './types';\nimport { sleep, TransactionEvents } from './utils';\nimport { AbstractTransaction } from './abstractTransaction';\n\nexport class TransactionBase implements AbstractTransaction {\n  static normalizeAddress(address: string) {\n    if (address === '0x') {\n      return '0x';\n    } else if (\n      HarmonyAddress.isValidChecksum(address) ||\n      HarmonyAddress.isValidBech32(address) ||\n      HarmonyAddress.isValidBech32TestNet(address)\n    ) {\n      return getAddress(address).checksum;\n    } else {\n      throw new Error(`Address format is not supported`);\n    }\n  }\n  emitter: Emitter;\n  messenger: Messenger;\n  txStatus: TxStatus;\n  blockNumbers: string[] = [];\n  confirmations: number = 0;\n  confirmationCheck: number = 0;\n  cxStatus: TxStatus = TxStatus.INTIALIZED;\n  cxBlockNumbers: string[] = [];\n  cxConfirmations: number = 0;\n  cxConfirmationCheck: number = 0;\n  receipt?: TransasctionReceipt;\n\n  id: string;\n  shardID: number | string;\n\n  constructor(messenger: Messenger, txStatus: TxStatus) {\n    this.messenger = messenger;\n    this.txStatus = txStatus;\n    this.emitter = new Emitter();\n    this.id = '0x';\n    this.shardID = this.messenger.currentShard;\n  }\n\n  setMessenger(messenger: Messenger) {\n    this.messenger = messenger;\n  }\n\n  setTxStatus(txStatus: TxStatus): void {\n    this.txStatus = txStatus;\n  }\n\n  getTxStatus(): TxStatus {\n    return this.txStatus;\n  }\n  setCxStatus(cxStatus: TxStatus): void {\n    this.cxStatus = cxStatus;\n  }\n\n  getCxStatus(): TxStatus {\n    return this.cxStatus;\n  }\n\n  // get status\n  isInitialized(): boolean {\n    return this.getTxStatus() === TxStatus.INTIALIZED;\n  }\n  isSigned(): boolean {\n    return this.getTxStatus() === TxStatus.SIGNED;\n  }\n  isPending(): boolean {\n    return this.getTxStatus() === TxStatus.PENDING;\n  }\n  isRejected(): boolean {\n    return this.getTxStatus() === TxStatus.REJECTED;\n  }\n  isConfirmed(): boolean {\n    return this.getTxStatus() === TxStatus.CONFIRMED;\n  }\n  isCxPending(): boolean {\n    return this.getCxStatus() === TxStatus.PENDING;\n  }\n  isCxRejected(): boolean {\n    return this.getCxStatus() === TxStatus.REJECTED;\n  }\n  isCxConfirmed(): boolean {\n    return this.getCxStatus() === TxStatus.CONFIRMED;\n  }\n  observed() {\n    return this.emitter;\n  }\n\n  async trackTx(txHash: string, shardID: number | string) {\n    if (!this.messenger) {\n      throw new Error('Messenger not found');\n    }\n    // TODO: regex validation for txHash so we don't get garbage\n    const res = await this.messenger.send(\n      RPCMethod.GetTransactionReceipt,\n      txHash,\n      this.messenger.chainType,\n      typeof shardID === 'string' ? Number.parseInt(shardID, 10) : shardID,\n    );\n    if (res.isResult() && res.result !== null) {\n      this.receipt = res.result;\n      this.emitReceipt(this.receipt);\n      this.id = res.result.transactionHash;\n      this.confirmations += 1;\n\n      if (this.receipt) {\n        if (this.receipt.status && this.receipt.status === '0x1') {\n          this.receipt.byzantium = true;\n          this.txStatus = TxStatus.CONFIRMED;\n        } else if (this.receipt.status && this.receipt.status === '0x0') {\n          this.receipt.byzantium = true;\n          this.txStatus = TxStatus.REJECTED;\n        } else if (this.receipt.status === undefined && this.receipt.root) {\n          this.receipt.byzantium = false;\n          this.txStatus = TxStatus.CONFIRMED;\n        }\n        return true;\n      } else {\n        this.txStatus = TxStatus.PENDING;\n        const currentBlock = await this.getBlockNumber(shardID);\n\n        this.blockNumbers.push('0x' + currentBlock.toString('hex'));\n\n        this.confirmationCheck += 1;\n        return false;\n      }\n    } else {\n      this.txStatus = TxStatus.PENDING;\n      const currentBlock = await this.getBlockNumber(shardID);\n      this.blockNumbers.push('0x' + currentBlock.toString('hex'));\n      this.confirmationCheck += 1;\n      return false;\n    }\n  }\n\n  async txConfirm(\n    txHash: string,\n    maxAttempts: number = 20,\n    interval: number = 1000,\n    shardID: number | string,\n  ) {\n    if (this.messenger.provider instanceof HttpProvider) {\n      this.txStatus = TxStatus.PENDING;\n      const oldBlock = await this.getBlockNumber(shardID);\n      let checkBlock = oldBlock;\n\n      for (let attempt = 0; attempt < maxAttempts; attempt += 1) {\n        try {\n          const newBlock = await this.getBlockNumber(shardID);\n          // TODO: this is super ugly, must be a better way doing this\n          const nextBlock = checkBlock.add(new BN(attempt === 0 ? attempt : 1));\n\n          if (newBlock.gte(nextBlock)) {\n            checkBlock = newBlock;\n            this.emitTrack({\n              txHash,\n              attempt,\n              currentBlock: checkBlock.toString(),\n              shardID,\n            });\n\n            if (await this.trackTx(txHash, shardID)) {\n              this.emitConfirm(this.txStatus);\n              return this;\n            }\n          } else {\n            attempt = attempt - 1 >= 0 ? attempt - 1 : 0;\n          }\n        } catch (err) {\n          this.txStatus = TxStatus.REJECTED;\n          this.emitConfirm(this.txStatus);\n          throw err;\n        }\n\n        if (attempt + 1 < maxAttempts) {\n          // await sleep(interval * attempt);\n          await sleep(interval);\n        }\n      }\n      this.txStatus = TxStatus.REJECTED;\n      this.emitConfirm(this.txStatus);\n      throw new Error(`The transaction is still not confirmed after ${maxAttempts} attempts.`);\n    } else {\n      try {\n        if (await this.trackTx(txHash, shardID)) {\n          this.emitConfirm(this.txStatus);\n          return this;\n        } else {\n          const result = await this.socketConfirm(txHash, maxAttempts, shardID);\n          return result;\n        }\n      } catch (error) {\n        this.txStatus = TxStatus.REJECTED;\n        this.emitConfirm(this.txStatus);\n        throw new Error(\n          `The transaction is still not confirmed after ${maxAttempts * interval} mil seconds.`,\n        );\n      }\n    }\n  }\n\n  socketConfirm(\n    txHash: string,\n    maxAttempts: number = 20,\n    shardID: number | string,\n  ): Promise<TransactionBase> {\n    return new Promise((resolve, reject) => {\n      const newHeads = Promise.resolve(\n        new NewHeaders(\n          this.messenger,\n          typeof shardID === 'string' ? Number.parseInt(shardID, 10) : shardID,\n        ),\n      );\n      newHeads.then((p) => {\n        p.onData(async (data: any) => {\n          const blockNumber =\n            this.messenger.chainPrefix === 'hmy'\n              ? data.params.result.Header.number\n              : data.params.result.number;\n          this.emitTrack({\n            txHash,\n            attempt: this.confirmationCheck,\n            currentBlock: hexToNumber(blockNumber),\n            shardID,\n          });\n          if (!this.blockNumbers.includes(blockNumber)) {\n            if (await this.trackTx(txHash, shardID)) {\n              this.emitConfirm(this.txStatus);\n              await p.unsubscribe();\n              resolve(this);\n            } else {\n              if (this.confirmationCheck === maxAttempts) {\n                this.txStatus = TxStatus.REJECTED;\n                this.emitConfirm(this.txStatus);\n                await p.unsubscribe();\n                resolve(this);\n              }\n            }\n          }\n        }).onError(async (error: any) => {\n          this.txStatus = TxStatus.REJECTED;\n          this.emitConfirm(this.txStatus);\n          this.emitError(error);\n          await p.unsubscribe();\n          reject(error);\n        });\n      });\n    });\n  }\n\n  emitTransactionHash(transactionHash: string) {\n    this.emitter.emit(TransactionEvents.transactionHash, transactionHash);\n  }\n  emitReceipt(receipt: any) {\n    this.emitter.emit(TransactionEvents.receipt, receipt);\n  }\n  emitError(error: any) {\n    this.emitter.emit(TransactionEvents.error, error);\n  }\n  emitConfirm(data: any) {\n    this.emitter.emit(TransactionEvents.confirmation, data);\n  }\n  emitTrack(data: any) {\n    this.emitter.emit(TransactionEvents.track, data);\n  }\n  emitCxReceipt(receipt: any) {\n    this.emitter.emit(TransactionEvents.cxReceipt, receipt);\n  }\n  emitCxConfirm(data: any) {\n    this.emitter.emit(TransactionEvents.cxConfirmation, data);\n  }\n  emitCxTrack(data: any) {\n    this.emitter.emit(TransactionEvents.cxTrack, data);\n  }\n\n  async getBlockNumber(shardID: number | string): Promise<BN> {\n    try {\n      const currentBlock = await this.messenger.send(\n        RPCMethod.BlockNumber,\n        [],\n        this.messenger.chainPrefix,\n        typeof shardID === 'string' ? Number.parseInt(shardID, 10) : shardID,\n      );\n      if (currentBlock.isError()) {\n        throw currentBlock.message;\n      }\n      return new BN(currentBlock.result.replace('0x', ''), 'hex');\n    } catch (error) {\n      throw error;\n    }\n  }\n  async getBlockByNumber(blockNumber: string) {\n    try {\n      const block = await this.messenger.send(\n        RPCMethod.GetBlockByNumber,\n        [blockNumber, true],\n        this.messenger.chainPrefix,\n        typeof this.shardID === 'string' ? Number.parseInt(this.shardID, 10) : this.shardID,\n      );\n      if (block.isError()) {\n        throw block.message;\n      }\n      return block.result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async cxConfirm(\n    txHash: string,\n    maxAttempts: number = 20,\n    interval: number = 1000,\n    toShardID: number | string,\n  ) {\n    if (this.messenger.provider instanceof HttpProvider) {\n      const oldBlock = await this.getBlockNumber(toShardID);\n      let checkBlock = oldBlock;\n\n      for (let attempt = 0; attempt < maxAttempts; attempt += 1) {\n        try {\n          const newBlock = await this.getBlockNumber(toShardID);\n          // TODO: this is super ugly, must be a better way doing this\n          const nextBlock = checkBlock.add(new BN(attempt === 0 ? attempt : 1));\n\n          if (newBlock.gte(nextBlock)) {\n            checkBlock = newBlock;\n            this.emitCxTrack({\n              txHash,\n              attempt,\n              currentBlock: checkBlock.toString(),\n              toShardID,\n            });\n\n            if (await this.trackCx(txHash, toShardID)) {\n              this.emitCxConfirm(this.cxStatus);\n              return this;\n            }\n          } else {\n            attempt = attempt - 1 >= 0 ? attempt - 1 : 0;\n          }\n        } catch (err) {\n          this.cxStatus = TxStatus.REJECTED;\n          this.emitCxConfirm(this.cxStatus);\n          throw err;\n        }\n        if (attempt + 1 < maxAttempts) {\n          await sleep(interval);\n        }\n      }\n      this.cxStatus = TxStatus.REJECTED;\n      this.emitCxConfirm(this.cxStatus);\n      throw new Error(`The transaction is still not confirmed after ${maxAttempts} attempts.`);\n    } else {\n      try {\n        if (await this.trackCx(txHash, toShardID)) {\n          this.emitCxConfirm(this.cxStatus);\n          return this;\n        } else {\n          const result = await this.socketCxConfirm(txHash, maxAttempts, toShardID);\n          return result;\n        }\n      } catch (error) {\n        this.cxStatus = TxStatus.REJECTED;\n        this.emitCxConfirm(this.cxStatus);\n        throw new Error(\n          `The transaction is still not confirmed after ${maxAttempts * interval} mil seconds.`,\n        );\n      }\n    }\n  }\n\n  async trackCx(txHash: string, toShardID: number | string) {\n    if (!this.messenger) {\n      throw new Error('Messenger not found');\n    }\n    // TODO: regex validation for txHash so we don't get garbage\n    const res = await this.messenger.send(\n      RPCMethod.GetCXReceiptByHash,\n      txHash,\n      this.messenger.chainPrefix,\n      typeof toShardID === 'string' ? Number.parseInt(toShardID, 10) : toShardID,\n    );\n    if (res.isResult() && res.result !== null) {\n      this.emitCxReceipt(res.result);\n      this.cxStatus = TxStatus.CONFIRMED;\n      return true;\n    } else {\n      const currentBlock = await this.getBlockNumber(toShardID);\n      this.cxBlockNumbers.push('0x' + currentBlock.toString('hex'));\n      this.cxConfirmationCheck += 1;\n      this.cxStatus = TxStatus.PENDING;\n      return false;\n    }\n  }\n\n  socketCxConfirm(\n    txHash: string,\n    maxAttempts: number = 20,\n    toShardID: number | string,\n  ): Promise<TransactionBase> {\n    return new Promise((resolve, reject) => {\n      const newHeads = Promise.resolve(\n        new NewHeaders(\n          this.messenger,\n          typeof toShardID === 'string' ? Number.parseInt(toShardID, 10) : toShardID,\n        ),\n      );\n      newHeads.then((p) => {\n        p.onData(async (data: any) => {\n          const blockNumber =\n            this.messenger.chainPrefix === 'hmy'\n              ? data.params.result.Header.number\n              : data.params.result.number;\n          this.emitCxTrack({\n            txHash,\n            attempt: this.cxConfirmationCheck,\n            currentBlock: hexToNumber(blockNumber),\n            toShardID,\n          });\n          if (!this.blockNumbers.includes(blockNumber)) {\n            if (await this.trackCx(txHash, toShardID)) {\n              this.emitCxConfirm(this.cxStatus);\n              await p.unsubscribe();\n              resolve(this);\n            } else {\n              if (this.cxConfirmationCheck === maxAttempts) {\n                this.cxStatus = TxStatus.REJECTED;\n                this.emitCxConfirm(this.cxStatus);\n                await p.unsubscribe();\n                resolve(this);\n              }\n            }\n          }\n        }).onError(async (error: any) => {\n          this.cxStatus = TxStatus.REJECTED;\n          this.emitCxConfirm(this.cxStatus);\n          this.emitError(error);\n          await p.unsubscribe();\n          reject(error);\n        });\n      });\n    });\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-transaction\n */\n\nimport {\n  BN,\n  encode,\n  arrayify,\n  hexlify,\n  stripZeros,\n  Signature,\n  splitSignature,\n} from '@harmony-js/crypto';\nimport { add0xToString, numberToHex, ChainType, Unit } from '@harmony-js/utils';\nimport { Messenger, RPCMethod } from '@harmony-js/network';\nimport { TxParams, TxStatus } from './types';\nimport {\n  recover,\n  transactionFields,\n  defaultMessenger,\n  transactionFieldsETH,\n  recoverETH,\n} from './utils';\n\nimport { TransactionBase } from './transactionBase';\n\nclass Transaction extends TransactionBase {\n  /** @hidden */\n  private from: string;\n  /** @hidden */\n  private nonce: number | string;\n  /** @hidden */\n  private to: string;\n  // private shardID: number | string;\n  /** @hidden */\n  private toShardID: number | string;\n  /** @hidden */\n  private gasLimit: BN;\n  /** @hidden */\n  private gasPrice: BN;\n  /** @hidden */\n  private data: string;\n  /** @hidden */\n  private value: BN;\n  /** @hidden */\n  private chainId: number;\n  /** @hidden */\n  private rawTransaction: string;\n  /** @hidden */\n  private unsignedRawTransaction: string;\n  /** @hidden */\n  private signature: Signature;\n\n  /**\n   * \n   * @Params\n   * ```javascript\n   * id:               string;\n    from:             string;\n    to:               string;\n    nonce:            number | string;\n    gasLimit:         number | string | BN;\n    gasPrice:         number | string | BN;\n    shardID:          number | string;\n    toShardID:        number | string;\n    data:             string;\n    value:            number | string | BN;\n    chainId:          number;\n    rawTransaction:   string;\n    unsignedRawTransaction: string;\n    signature:        Signature;\n    receipt?:         TransasctionReceipt;\n   * ```\n   */\n  constructor(\n    params?: TxParams | any,\n    messenger: Messenger = defaultMessenger,\n    txStatus = TxStatus.INTIALIZED,\n  ) {\n    super(messenger, txStatus);\n    // intialize transaction\n    this.id = params && params.id ? params.id : '0x';\n    this.from = params && params.from ? params.from : '0x';\n    this.nonce = params && params.nonce ? params.nonce : 0;\n    this.gasPrice =\n      params && params.gasPrice\n        ? new Unit(params.gasPrice).asWei().toWei()\n        : new Unit(0).asWei().toWei();\n    this.gasLimit =\n      params && params.gasLimit\n        ? new Unit(params.gasLimit).asWei().toWei()\n        : new Unit(0).asWei().toWei();\n    this.shardID =\n      params && params.shardID !== undefined ? params.shardID : this.messenger.currentShard;\n    this.toShardID =\n      params && params.toShardID !== undefined ? params.toShardID : this.messenger.currentShard;\n\n    this.to = params && params.to ? Transaction.normalizeAddress(params.to) : '0x';\n    this.value =\n      params && params.value ? new Unit(params.value).asWei().toWei() : new Unit(0).asWei().toWei();\n    this.data = params && params.data ? params.data : '0x';\n    // chainid should change with different network settings\n    this.chainId = params && params.chainId ? params.chainId : this.messenger.chainId;\n    this.rawTransaction = params && params.rawTransaction ? params.rawTransaction : '0x';\n    this.unsignedRawTransaction =\n      params && params.unsignedRawTransaction ? params.unsignedRawTransaction : '0x';\n    this.signature =\n      params && params.signature\n        ? params.signature\n        : {\n            r: '',\n            s: '',\n            recoveryParam: 0,\n            v: 0,\n          };\n\n    this.receipt = params && params.receipt ? params.receipt : undefined;\n    this.cxStatus = this.isCrossShard() ? TxStatus.INTIALIZED : TxStatus.NONE;\n  }\n\n  /**\n   *\n   * @example\n   * ```javascript\n   * const unsigned = txn.getRLPUnsigned(txn);\n   * console.log(unsigned);\n   * ```\n   */\n  getRLPUnsigned(): [string, any[]] {\n    const raw: Array<string | Uint8Array> = [];\n\n    // temp setting to be compatible with eth\n    const fields =\n      this.messenger.chainType === ChainType.Harmony ? transactionFields : transactionFieldsETH;\n\n    fields.forEach((field: any) => {\n      let value = (<any>this.txParams)[field.name] || [];\n      value = arrayify(\n        hexlify(field.transform === 'hex' ? add0xToString(value.toString(16)) : value),\n      );\n      // Fixed-width field\n      if (field.fix === true && field.length && value.length !== field.length && value.length > 0) {\n        throw new Error(`invalid length for ${field.name}`);\n      }\n\n      // Variable-width (with a maximum)\n      if (field.fix === false && field.length) {\n        value = stripZeros(value);\n        if (value.length > field.length) {\n          throw new Error(`invalid length for ${field.name}`);\n        }\n      }\n\n      raw.push(hexlify(value));\n    });\n\n    if (this.txParams.chainId != null && this.txParams.chainId !== 0) {\n      raw.push(hexlify(this.txParams.chainId));\n      raw.push('0x');\n      raw.push('0x');\n    }\n\n    return [encode(raw), raw];\n  }\n\n  getRLPSigned(raw: any[], signature: Signature): string {\n    // temp setting to be compatible with eth\n    const rawLength = this.messenger.chainType === ChainType.Harmony ? 11 : 9;\n    const sig = splitSignature(signature);\n    let v = 27 + (sig.recoveryParam || 0);\n    if (raw.length === rawLength) {\n      raw.pop();\n      raw.pop();\n      raw.pop();\n      v += this.chainId * 2 + 8;\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r) || []));\n    raw.push(stripZeros(arrayify(sig.s) || []));\n\n    return encode(raw);\n  }\n\n  /**\n   * @example\n   * ```javascript\n   * console.log(txn.getRawTransaction());\n   * ```\n   */\n  getRawTransaction(): string {\n    return this.rawTransaction;\n  }\n\n  /** @hidden */\n  recover(rawTransaction: string): Transaction {\n    // temp setting to be compatible with eth\n    const recovered =\n      this.messenger.chainType === ChainType.Harmony\n        ? recover(rawTransaction)\n        : recoverETH(rawTransaction);\n\n    this.setParams(recovered);\n    return this;\n  }\n\n  /**\n   * get the payload of transaction\n   *\n   * @example\n   * ```\n   * const payload = txn.txPayload;\n   * console.log(payload);\n   * ```\n   */\n  get txPayload() {\n    return {\n      from: this.txParams.from || '0x',\n      to: this.txParams.to || '0x',\n      shardID: this.txParams.shardID ? numberToHex(this.shardID) : '0x',\n      toShardID: this.txParams.toShardID ? numberToHex(this.toShardID) : '0x',\n      gas: this.txParams.gasLimit ? numberToHex(this.txParams.gasLimit) : '0x',\n      gasPrice: this.txParams.gasPrice ? numberToHex(this.txParams.gasPrice) : '0x',\n      value: this.txParams.value ? numberToHex(this.txParams.value) : '0x',\n      data: this.txParams.data || '0x',\n      nonce: this.txParams.nonce ? numberToHex(this.nonce) : '0x',\n    };\n  }\n\n  /**\n   * get transaction params\n   *\n   * @example\n   * ```\n   * const txParams = txn.txParams;\n   * console.log(txParams)\n   * ```\n   */\n  get txParams(): TxParams {\n    return {\n      id: this.id || '0x',\n      from: this.from || '',\n      nonce: this.nonce || 0,\n      gasPrice: this.gasPrice || new Unit(0).asWei().toWei(),\n      gasLimit: this.gasLimit || new Unit(0).asWei().toWei(),\n      shardID: this.shardID !== undefined ? this.shardID : this.messenger.currentShard,\n      toShardID: this.toShardID !== undefined ? this.toShardID : this.messenger.currentShard,\n      to: Transaction.normalizeAddress(this.to) || '0x',\n      value: this.value || new Unit(0).asWei().toWei(),\n      data: this.data || '0x',\n      chainId: this.chainId || 0,\n      rawTransaction: this.rawTransaction || '0x',\n      unsignedRawTransaction: this.unsignedRawTransaction || '0x',\n      signature: this.signature || '0x',\n    };\n  }\n\n  /**\n   * set the params to the txn\n   *\n   * @example\n   * ```\n   * txn.setParams({\n   *   to: 'one1ew56rqrucu6p6n598fmjmnfh8dd4xpg6atne9c',\n   *   value: '1200',\n   *   gasLimit: '230000',\n   *   shardID: 1,\n   *   toShardID: 0,\n   *   gasPrice: new hmy.utils.Unit('101').asGwei().toWei(),\n   *   signature: {\n   *     r: '0xd693b532a80fed6392b428604171fb32fdbf953728a3a7ecc7d4062b1652c042',\n   *     s: '0x24e9c602ac800b983b035700a14b23f78a253ab762deab5dc27e3555a750b354',\n   *     v: 0\n   *   },\n   * });\n   * console.log(txn);\n   * ```\n   */\n  setParams(params: TxParams) {\n    this.id = params && params.id ? params.id : '0x';\n    this.from = params && params.from ? params.from : '0x';\n    this.nonce = params && params.nonce ? params.nonce : 0;\n    this.gasPrice =\n      params && params.gasPrice\n        ? new Unit(params.gasPrice).asWei().toWei()\n        : new Unit(0).asWei().toWei();\n    this.gasLimit =\n      params && params.gasLimit\n        ? new Unit(params.gasLimit).asWei().toWei()\n        : new Unit(0).asWei().toWei();\n    this.shardID =\n      params && params.shardID !== undefined ? params.shardID : this.messenger.currentShard;\n    this.toShardID =\n      params && params.toShardID !== undefined ? params.toShardID : this.messenger.currentShard;\n    this.to = params && params.to ? Transaction.normalizeAddress(params.to) : '0x';\n    this.value =\n      params && params.value ? new Unit(params.value).asWei().toWei() : new Unit(0).asWei().toWei();\n    this.data = params && params.data ? params.data : '0x';\n    this.chainId = params && params.chainId ? params.chainId : 0;\n    this.rawTransaction = params && params.rawTransaction ? params.rawTransaction : '0x';\n    this.unsignedRawTransaction =\n      params && params.unsignedRawTransaction ? params.unsignedRawTransaction : '0x';\n    this.signature =\n      params && params.signature\n        ? params.signature\n        : {\n            r: '',\n            s: '',\n            recoveryParam: 0,\n            v: 0,\n          };\n    if (this.rawTransaction !== '0x') {\n      this.setTxStatus(TxStatus.SIGNED);\n    } else {\n      this.setTxStatus(TxStatus.INTIALIZED);\n    }\n  }\n\n  /** @hidden */\n  map(fn: any) {\n    const newParams = fn(this.txParams);\n    this.setParams(newParams);\n\n    return this;\n  }\n\n  /**\n   * Check whether the transaction is cross shard\n   *\n   * @example\n   * ```javascript\n   * console.log(txn.isCrossShard());\n   * ```\n   */\n  isCrossShard(): boolean {\n    return new BN(this.txParams.shardID).toString() !== new BN(this.txParams.toShardID).toString();\n  }\n\n  /**\n   *\n   * @example\n   * ```\n   * txn.sendTransaction().then((value) => {\n   *   console.log(value);\n   * });\n   * ```\n   */\n\n  async sendTransaction(): Promise<[Transaction, string]> {\n    if (this.rawTransaction === 'tx' || this.rawTransaction === undefined) {\n      throw new Error('Transaction not signed');\n    }\n    if (!this.messenger) {\n      throw new Error('Messenger not found');\n    }\n\n    // const fromShard = this.shardID;\n    // const toShard = this.toShardID;\n    // await this.messenger.setShardingProviders();\n    const res = await this.messenger.send(\n      RPCMethod.SendRawTransaction,\n      this.rawTransaction,\n      this.messenger.chainType,\n      typeof this.shardID === 'string' ? Number.parseInt(this.shardID, 10) : this.shardID,\n    );\n\n    // temporarilly hard coded\n    if (res.isResult()) {\n      this.id = res.result;\n      this.emitTransactionHash(this.id);\n      this.setTxStatus(TxStatus.PENDING);\n      // await this.confirm(this.id, 20, 1000);\n      return [this, res.result];\n    } else if (res.isError()) {\n      this.emitConfirm(`transaction failed:${res.error.message}`);\n      this.setTxStatus(TxStatus.REJECTED);\n      return [this, `transaction failed:${res.error.message}`];\n    } else {\n      this.emitError('transaction failed');\n      throw new Error('transaction failed');\n    }\n  }\n\n  async confirm(\n    txHash: string,\n    maxAttempts: number = 20,\n    interval: number = 1000,\n    shardID: number | string = this.txParams.shardID,\n    toShardID: number | string = this.txParams.toShardID,\n  ) {\n    const txConfirmed = await this.txConfirm(txHash, maxAttempts, interval, shardID);\n    if (!this.isCrossShard()) {\n      return txConfirmed;\n    }\n    if (txConfirmed.isConfirmed()) {\n      const cxConfirmed = await this.cxConfirm(txHash, maxAttempts, interval, toShardID);\n      return cxConfirmed;\n    } else {\n      return txConfirmed;\n    }\n  }\n}\nexport { Transaction };\n","/**\n * @packageDocumentation\n * @module harmony-transaction\n * @hidden\n */\n\nimport { Messenger } from '@harmony-js/network';\nimport { AddressSuffix } from '@harmony-js/utils';\nimport { Transaction } from './transaction';\nimport { TxParams, TxStatus } from './types';\nimport { defaultMessenger } from './utils';\n\nexport class ShardingTransaction extends Transaction {\n  constructor(\n    params?: TxParams | any,\n    messenger: Messenger = defaultMessenger,\n    txStatus = TxStatus.INTIALIZED,\n  ) {\n    const fromAddress = params.from;\n    const toAddress = params.to;\n    const fromExtraction =\n      fromAddress !== undefined ? fromAddress.split(AddressSuffix) : ['0x', undefined];\n    const toExtraction =\n      toAddress !== undefined ? toAddress.split(AddressSuffix) : ['0x', undefined];\n    const from = fromExtraction[0];\n    const shardID =\n      fromExtraction[1] !== undefined\n        ? Number.parseInt(fromExtraction[1], 10)\n        : params.shardID !== undefined\n        ? params.shardID\n        : 0;\n    const to = toExtraction[0];\n    const toShardID =\n      toExtraction[1] !== undefined\n        ? Number.parseInt(toExtraction[1], 10)\n        : params.toShardID !== undefined\n        ? params.toShardID\n        : 0;\n\n    const reParams = {\n      ...params,\n      from,\n      to,\n      shardID,\n      toShardID,\n    };\n\n    super(reParams, messenger, txStatus);\n  }\n}\n","/**\n * ## hhahaha\n *\n * @packageDocumentation\n * @module harmony-transaction\n */\n\nimport { getContractAddress, getAddress } from '@harmony-js/crypto';\nimport { Messenger } from '@harmony-js/network';\nimport { Transaction } from './transaction';\nimport { ShardingTransaction } from './shardingTransaction';\nimport { TxParams, TxStatus } from './types';\n\nexport class TransactionFactory {\n  static getContractAddress(tx: Transaction) {\n    const { from, nonce } = tx.txParams;\n    return getAddress(\n      getContractAddress(getAddress(from).checksum, Number.parseInt(`${nonce}`, 10)),\n    ).checksum;\n  }\n\n  messenger: Messenger;\n  constructor(messenger: Messenger) {\n    this.messenger = messenger;\n  }\n  setMessenger(messenger: Messenger) {\n    this.messenger = messenger;\n  }\n\n  /**\n   * Create a new Transaction\n   * @params\n   * ```\n   * // to: Address of the receiver\n   * // value: value transferred in wei\n   * // gasLimit: the maximum gas would pay, can use string\n   * // shardID: send token from shardID\n   * // toShardId: send token to shardID\n   * // gasPrice: you can use Unit class, and use Gwei, then remember to use toWei(), which will be transformed to BN\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const txn = hmy.transactions.newTx({\n   *   to: 'one166axnkjmghkf3df7xfvd0hn4dft8kemrza4cd2',\n   *   value: '10000',\n   *   gasLimit: '210000',\n   *   shardID: 0,\n   *   toShardID: 0,\n   *   gasPrice: new hmy.utils.Unit('100').asGwei().toWei(),\n   * });\n   * ```\n   */\n  newTx(txParams?: TxParams | any, sharding: boolean = false): Transaction {\n    if (!sharding) {\n      return new Transaction(txParams, this.messenger, TxStatus.INTIALIZED);\n    }\n    return new ShardingTransaction(txParams, this.messenger, TxStatus.INTIALIZED);\n  }\n\n  /**\n   * clone the transaction\n   *\n   * @param transaction\n   *\n   * @example\n   * ```javascript\n   * const cloneTxn = hmy.transactions.clone(txn);\n   * console.log(cloneTxn)\n   * ```\n   */\n  clone(transaction: Transaction): Transaction {\n    return new Transaction(transaction.txParams, this.messenger, TxStatus.INTIALIZED);\n  }\n\n  /**\n   *\n   * @example\n   * ```javascript\n   * txHash = '0xf8698085174876e8008252088080949d72989b68777a1f3ffd6f1db079f1928373ee52830186a08027a0ab8229ff5d5240948098f26372eaed9ab2e9be23e8594b08e358ca56a47f8ae9a0084e5c4d1fec496af444423d8a714f65c079260ff01a1be1de7005dd424adf44'\n   *\n   * const recoverTx = hmy.transactions.recover(txHash);\n   * console.log(recoverTx);\n   * ```\n   */\n  recover(txHash: string): Transaction {\n    const newTxn = new Transaction({}, this.messenger, TxStatus.INTIALIZED);\n    newTxn.recover(txHash);\n    return newTxn;\n  }\n}\n","/**\n * ## About this package\n *\n * `@harmony-js/transaction` provides the functions to build transactions\n *\n * Develop can use this package to:\n * - build a transaction offline!\n * - set params of transaction\n * -\n *\n * ## How to use this package\n * ### Step 1: create a Harmony Instance\n * ```javascript\n * const { Harmony } = require('@harmony-js/core');\n * const { ChainID, ChainType } = require('@harmony-js/utils');\n * const { BN } = require('@harmony-js/crypto');\n *\n * const hmy = new Harmony(\n *   'http://localhost:9500',\n *   {\n *     chainType: ChainType.Harmony,\n *     chainId: ChainID.HmyLocal,\n *   },\n * );\n * ```\n *\n * ### Step 2: build a transaction\n * ```javascript\n * const txn = hmy.transactions.newTx({\n *   to: 'one166axnkjmghkf3df7xfvd0hn4dft8kemrza4cd2',\n *   value: '10000',\n *   gasLimit: '210000',\n *   shardID: 0,\n *   toShardID: 0,\n *   gasPrice: new hmy.utils.Unit('100').asGwei().toWei(),\n * });\n * ```\n *\n * ## some important information\n * Transaction Parameters\n * ```java\n * // interface TxParams\n * id:               string;\n * from:             string;\n * to:               string;\n * nonce:            number | string;\n * gasLimit:         number | string | BN;\n * gasPrice:         number | string | BN;\n * shardID:          number | string;\n * toShardID:        number | string;\n * data:             string;\n * value:            number | string | BN;\n * chainId:          number;\n * rawTransaction:   string;\n * unsignedRawTransaction: string;\n * signature:        Signature;\n * receipt?:         TransasctionReceipt;\n * ```\n *\n * Transaction Receipt\n * ```java\n * // interface TransasctionReceipt\n * transactionHash:   string;\n * transactionIndex:  string;\n * blockHash:         string;\n * blockNumber:       string; // 11\n * from:              string;\n * to:                string;\n * gasUsed:           string;\n * cumulativeGasUsed: string; // 13244\n * contractAddress?:  string | null; // or null, if none was created\n * logs:              any[];\n * logsBloom:         string; // 256 byte bloom filter\n * v:                 string;\n * r:                 string;\n * s:                 string;\n * responseType?:     string;\n * byzantium?:        boolean;\n * status?:           string; // post Byzantium will return `0x0` or `0x1`\n * root?:             string; // pre Byzantium will return `root`\n * ```\n *\n * @packageDocumentation\n * @module harmony-transaction\n */\n\nimport { BN, Signature } from '@harmony-js/crypto';\n\nexport interface TxParams {\n  id: string;\n  from: string;\n  to: string;\n  nonce: number | string;\n  gasLimit: number | string | BN;\n  gasPrice: number | string | BN;\n  shardID: number | string;\n  toShardID: number | string;\n  data: string;\n  value: number | string | BN;\n  chainId: number;\n  rawTransaction: string;\n  unsignedRawTransaction: string;\n  signature: Signature;\n  receipt?: TransasctionReceipt;\n}\n\nexport const enum TxStatus {\n  NONE = 'NONE',\n  INTIALIZED = 'INITIALIZED',\n  SIGNED = 'SIGNED',\n  PENDING = 'PENDING',\n  CONFIRMED = 'CONFIRMED',\n  REJECTED = 'REJECTED',\n}\n\nexport interface TransasctionReceipt {\n  transactionHash: string;\n  transactionIndex: string;\n  blockHash: string;\n  blockNumber: string; // 11\n  from: string;\n  to: string;\n  gasUsed: string;\n  cumulativeGasUsed: string; // 13244\n  contractAddress?: string | null; // or null, if none was created\n  logs: any[];\n  logsBloom: string; // 256 byte bloom filter\n  v: string;\n  r: string;\n  s: string;\n  responseType?: string;\n  byzantium?: boolean;\n  status?: string; // post Byzantium will return `0x0` or `0x1`\n  root?: string; // pre Byzantium will return `root`\n}\n","/**\n * @packageDocumentation\n * @module harmony-transaction\n * @hidden\n */\n\nimport { Messenger } from '@harmony-js/network';\nimport { TxStatus } from './types';\n\nexport abstract class AbstractTransaction {\n  abstract setMessenger(messenger: Messenger): void;\n  abstract setTxStatus(txStatus: TxStatus): void;\n  abstract getTxStatus(): TxStatus;\n  abstract isInitialized(): boolean;\n  abstract isSigned(): boolean;\n  abstract isPending(): boolean;\n  abstract isRejected(): boolean;\n  abstract isConfirmed(): boolean;\n  abstract async trackTx(txHash: string, shardID: number | string): Promise<boolean>;\n  abstract async txConfirm(\n    txHash: string,\n    maxAttempts: number | undefined,\n    interval: number | undefined,\n    shardID: string | number,\n  ): Promise<any>;\n  abstract async socketConfirm(\n    txHash: string,\n    maxAttempts: number,\n    shardID: number | string,\n  ): Promise<any>;\n  abstract async getBlockNumber(shardID: number | string): Promise<any>;\n  abstract async getBlockByNumber(blockNumber: string): Promise<any>;\n}\n","/**\n * @packageDocumentation\n * @module harmony-transaction\n * @hidden\n */\n\nexport * from './factory';\nexport * from './transaction';\nexport * from './shardingTransaction';\nexport * from './types';\nexport * from './utils';\nexport * from './transactionBase';\nexport * from './abstractTransaction';\n"],"names":["isHex","hexToNumber","isAddress","decode","BN","strip0x","getAddress","hexZeroPad","hexlify","keccak256","encode","recoverAddress","TransactionEvents","Messenger","HttpProvider","sign","Emitter","HarmonyAddress","NewHeaders","Unit","arrayify","add0xToString","stripZeros","splitSignature","numberToHex","AddressSuffix","getContractAddress","TxStatus"],"mappings":"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"}