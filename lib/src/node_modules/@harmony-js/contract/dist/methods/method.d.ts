/**
 * @packageDocumentation
 * @module harmony-contract
 */
import { Wallet } from '@harmony-js/account';
import { Transaction } from '@harmony-js/transaction';
import { Emitter } from '@harmony-js/network';
import { AbiItemModel } from '../models/types';
import { Contract } from '../contract';
export declare class ContractMethod {
    contract: Contract;
    params: any;
    methodKey: string;
    wallet: Wallet | any;
    abiItem: AbiItemModel;
    callResponse?: any;
    callPayload?: any;
    protected transaction: Transaction;
    constructor(methodKey: string, params: any, abiItem: AbiItemModel, contract: Contract);
    send(params: any): Emitter;
    call(options: any, blockNumber?: any): Promise<any>;
    estimateGas(params?: {
        from?: string;
        to?: string;
        gas?: string;
        gasPrice?: string;
        value?: string;
        data?: string;
    }): Promise<any>;
    encodeABI(): string;
    debug(): {
        callResponse: any;
        callPayload: any;
    };
    protected signTransaction(updateNonce: boolean): Promise<any>;
    protected sendTransaction(signed: Transaction): Promise<[Transaction, string]>;
    protected confirm(id: string): Promise<void>;
    protected createTransaction(): Transaction;
    protected afterCall(response: any): any;
}
//# sourceMappingURL=method.d.ts.map