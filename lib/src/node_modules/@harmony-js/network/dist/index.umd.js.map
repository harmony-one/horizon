{"version":3,"file":"index.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/providers/baseProvider.ts","../src/providers/baseSocket.ts","../src/providers/defaultFetcher.ts","../src/rpcMethod/net.ts","../src/providers/http.ts","../src/rpcMethod/builder.ts","../src/providers/ws.ts","../src/providers/emitter.ts","../src/providers/provider.ts","../src/messenger/responseMiddleware.ts","../src/messenger/messenger.ts","../src/rpcMethod/rpc.ts","../src/tracker/baseTracker.ts","../src/tracker/pollingTracker.ts","../src/tracker/subscribeTracker.ts","../src/subscriptions/Subscription.ts","../src/subscriptions/LogSub.ts","../src/subscriptions/NewHeadersSub.ts","../src/subscriptions/NewPendingTransactionsSub.ts","../src/subscriptions/SyncingSub.ts","../src/util.ts","../src/types.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { ReqMiddleware, ResMiddleware, MiddlewareType } from '../types';\nimport { RPCMethod } from '../rpcMethod/rpc';\n\nclass BaseProvider {\n  middlewares = {\n    request: {\n      use: (fn: ReqMiddleware, match: string | RPCMethod | RegExp = '*') => {\n        this.pushMiddleware(fn, MiddlewareType.REQ, match);\n      },\n    },\n    response: {\n      use: (fn: ResMiddleware, match: string | RPCMethod | RegExp = '*') => {\n        this.pushMiddleware(fn, MiddlewareType.RES, match);\n      },\n    },\n  };\n  protected url: string;\n  protected reqMiddleware: ReqMiddleware = new Map().set('*', []);\n  protected resMiddleware: ResMiddleware = new Map().set('*', []);\n\n  constructor(\n    url: string,\n    reqMiddleware: ReqMiddleware = new Map(),\n    resMiddleware: ResMiddleware = new Map(),\n  ) {\n    this.reqMiddleware = reqMiddleware;\n    this.resMiddleware = resMiddleware;\n    this.url = url;\n  }\n\n  protected pushMiddleware(fn: any, type: MiddlewareType, match: string | RPCMethod | RegExp) {\n    if (type !== MiddlewareType.REQ && type !== MiddlewareType.RES) {\n      throw new Error('Please specify the type of middleware being added');\n    }\n    if (type === MiddlewareType.REQ) {\n      const current = this.reqMiddleware.get(match) || [];\n      this.reqMiddleware.set(match, [...current, <ReqMiddleware>fn]);\n    } else {\n      const current = this.resMiddleware.get(match) || [];\n      this.resMiddleware.set(match, [...current, <ResMiddleware>fn]);\n    }\n  }\n  protected getMiddleware(method: RPCMethod | string): [ReqMiddleware[], ResMiddleware[]] {\n    const requests: ReqMiddleware[] = [];\n    const responses: ResMiddleware[] = [];\n\n    for (const [key, transformers] of this.reqMiddleware.entries()) {\n      if (typeof key === 'string' && key !== '*' && key === method) {\n        requests.push(...transformers);\n      }\n\n      if (key instanceof RegExp && key.test(method)) {\n        requests.push(...transformers);\n      }\n\n      if (key === '*') {\n        requests.push(...transformers);\n      }\n    }\n\n    for (const [key, transformers] of this.resMiddleware.entries()) {\n      if (typeof key === 'string' && key !== '*' && key === method) {\n        responses.push(...transformers);\n      }\n\n      if (key instanceof RegExp && key.test(method)) {\n        responses.push(...transformers);\n      }\n\n      if (key === '*') {\n        responses.push(...transformers);\n      }\n    }\n\n    return [requests, responses];\n  }\n}\n\nexport { BaseProvider };\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { isWs } from '@harmony-js/utils';\nimport mitt from 'mitt';\nimport { BaseProvider } from './baseProvider';\n\nexport const enum SocketConnection {\n  READY = 'ready',\n  CONNECT = 'connect',\n  ERROR = 'error',\n  CLOSE = 'close',\n}\n\nexport const enum SocketState {\n  SOCKET_MESSAGE = 'socket_message',\n  SOCKET_READY = 'socket_ready',\n  SOCKET_CLOSE = 'socket_close',\n  SOCKET_ERROR = 'socket_error',\n  SOCKET_CONNECT = 'socket_connect',\n  SOCKET_NETWORK_CHANGED = 'socket_networkChanged',\n  SOCKET_ACCOUNTS_CHANGED = 'socket_accountsChanged',\n}\n\nexport const enum EmittType {\n  INSTANCE = 'instance',\n  PUBSUB = 'pubsub',\n}\n\nclass BaseSocket extends BaseProvider {\n  url: string;\n  emitter: mitt.Emitter;\n  handlers: any = {};\n  constructor(url: string) {\n    super(url);\n    if (!isWs(url)) {\n      throw new Error(`${url} is not websocket`);\n    }\n    this.url = url;\n    this.emitter = mitt(this.handlers);\n  }\n  resetHandlers() {\n    // tslint:disable-next-line: forin\n    for (const i in this.handlers) {\n      delete this.handlers[i];\n    }\n  }\n\n  once(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n    this.removeEventListener(type);\n  }\n\n  addEventListener(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n  }\n\n  removeEventListener(type?: string, handler?: mitt.Handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  }\n  reset() {\n    this.removeEventListener('*');\n    // this.registerEventListeners();\n  }\n  removeAllSocketListeners() {\n    this.removeEventListener(SocketState.SOCKET_MESSAGE);\n    this.removeEventListener(SocketState.SOCKET_READY);\n    this.removeEventListener(SocketState.SOCKET_CLOSE);\n    this.removeEventListener(SocketState.SOCKET_ERROR);\n    this.removeEventListener(SocketState.SOCKET_CONNECT);\n  }\n\n  onReady(event: any) {\n    this.emitter.emit(SocketConnection.READY, event);\n    this.emitter.emit(SocketState.SOCKET_READY, event);\n  }\n  onError(error: any) {\n    this.emitter.emit(SocketConnection.ERROR, error);\n    this.emitter.emit(SocketState.SOCKET_ERROR, error);\n    this.removeAllSocketListeners();\n    this.removeEventListener('*');\n  }\n  onClose(error = null) {\n    this.emitter.emit(SocketConnection.CLOSE, error);\n    this.emitter.emit(SocketState.SOCKET_CLOSE, error);\n    this.removeAllSocketListeners();\n    this.removeEventListener('*');\n  }\n}\n\nexport { BaseSocket };\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport fetch from 'cross-fetch';\nimport { RPCRequest, RPCResponseBody, RPCError, RPCResult } from '../types';\n\nexport const fetchRPC = {\n  requestHandler: (request: RPCRequest<any[]>, headers: any) =>\n    fetch(request.url, {\n      method: request.options && request.options.method ? request.options.method : 'POST',\n      cache: 'no-cache',\n      mode: 'cors',\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(request.payload),\n      headers: {\n        ...headers,\n        ...(request.options && request.options.headers ? request.options.headers : {}),\n      },\n    }),\n  responseHandler: (response: Response, request: RPCRequest<any>, handler: any) =>\n    response\n      .json()\n      .then((body: RPCResponseBody<RPCResult, RPCError>) => {\n        return { ...body, req: request };\n      })\n      .then(handler),\n};\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @ignore\n */\n\nexport const DEFAULT_TIMEOUT: number = 120000;\n\nexport const DEFAULT_HEADERS: object = { 'Content-Type': 'application/json' };\n\nfunction _fetch(fetchPromise: Promise<any>, timeout: number) {\n  let abortFn: () => void;\n\n  const abortPromise = new Promise((resolve, reject) => {\n    abortFn = () => reject(new Error(`request Timeout in ${timeout} ms`));\n  });\n  const abortablePromise = Promise.race([fetchPromise, abortPromise]);\n\n  setTimeout(() => {\n    abortFn();\n  }, timeout);\n\n  return abortablePromise;\n}\n\nexport const performRPC = async (request: any, handler: any, fetcher: any) => {\n  try {\n    const response = await _fetch(\n      fetcher.requestHandler(request, DEFAULT_HEADERS),\n      request.options && request.options.timeout ? request.options.timeout : DEFAULT_TIMEOUT,\n    );\n    return fetcher.responseHandler(response, request, handler);\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport function composeMiddleware(...fns: any[]): any {\n  if (fns.length === 0) {\n    return (arg: any) => arg;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return fns.reduce((a, b) => (arg: any) => a(b(arg)));\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport { BaseProvider } from './baseProvider';\nimport { fetchRPC } from './defaultFetcher';\nimport { composeMiddleware, performRPC, DEFAULT_TIMEOUT, DEFAULT_HEADERS } from '../rpcMethod/net';\n\nimport { RPCRequestPayload } from '../types';\n\n/** @hidden */\nconst defaultOptions = {\n  method: 'POST',\n  timeout: DEFAULT_TIMEOUT,\n  headers: DEFAULT_HEADERS,\n  user: null,\n  password: null,\n};\n\nclass HttpProvider extends BaseProvider {\n  url: string;\n  fetcher?: any;\n  options?: any;\n  constructor(url: string, options?: any, fetcher?: any) {\n    super(url);\n    this.url = url || 'http://localhost:9500';\n    this.fetcher = fetcher || fetchRPC;\n    if (options) {\n      this.options = {\n        method: options.method || defaultOptions.method,\n        timeout: options.timeout || defaultOptions.timeout,\n        user: options.user || defaultOptions.user,\n        password: options.password || defaultOptions.password,\n        headers: options.headers || defaultOptions.headers,\n      };\n    } else {\n      this.options = defaultOptions;\n    }\n  }\n\n  /**\n   * @function send\n   * @memberof HttpProvider.prototype\n   * @param  {Object} payload  - payload object\n   * @param  {Function} callback - callback function\n   * @return {any} - RPC Response\n   */\n  send(payload: RPCRequestPayload<object>, callback?: any): Promise<any> {\n    return this.requestFunc({ payload, callback });\n  }\n\n  /**\n   * @function sendServer\n   * @memberof HttpProvider.prototype\n   * @param  {String} endpoint - endpoint to server\n   * @param  {Object} payload  - payload object\n   * @param  {Function} callback - callback function\n   * @return {Function} - RPC Response\n   */\n  sendServer(endpoint: string, payload: RPCRequestPayload<object>, callback: any): Promise<any> {\n    return this.requestFunc({ endpoint, payload, callback });\n  }\n\n  requestFunc({\n    endpoint,\n    payload,\n    callback,\n  }: {\n    endpoint?: string;\n    payload: RPCRequestPayload<object>;\n    callback?: any;\n  }): Promise<any> {\n    const [tReq, tRes] = this.getMiddleware(payload.method);\n    const reqMiddleware = composeMiddleware(\n      ...tReq,\n      (obj: object) => this.optionsHandler(obj),\n      (obj: object) => this.endpointHandler(obj, endpoint),\n      this.payloadHandler,\n    );\n    const resMiddleware = composeMiddleware(\n      (data: object) => this.callbackHandler(data, callback),\n      ...tRes,\n    );\n\n    const req = reqMiddleware(payload);\n\n    return performRPC(req, resMiddleware, this.fetcher);\n  }\n\n  /**\n   * @function payloadHandler\n   * @memberof HttpProvider.prototype\n   * @param  {Object} payload - payload object\n   * @return {Object} - to payload object\n   */\n  payloadHandler(payload: RPCRequestPayload<object>): object {\n    return { payload };\n  }\n\n  /**\n   * @function endpointHandler\n   * @memberof HttpProvider.prototype\n   * @param  {Object} obj      - payload object\n   * @param  {String} endpoint - add the endpoint to payload object\n   * @return {Object} - assign a new object\n   */\n  endpointHandler(obj: object, endpoint?: string): object {\n    return {\n      ...obj,\n      url: endpoint !== null && endpoint !== undefined ? `${this.url}${endpoint}` : this.url,\n    };\n  }\n\n  /**\n   * @function optionsHandler\n   * @memberof HttpProvider.prototype\n   * @param  {object} obj - options object\n   * @return {object} - assign a new option object\n   */\n  optionsHandler(obj: object): object {\n    if (this.options.user && this.options.password) {\n      const AUTH_TOKEN = `Basic ${Buffer.from(\n        `${this.options.user}:${this.options.password}`,\n      ).toString('base64')}`;\n      this.options.headers.Authorization = AUTH_TOKEN;\n    }\n\n    return { ...obj, options: this.options };\n  }\n\n  /**\n   * @function callbackHandler\n   * @memberof HttpProvider.prototype\n   * @param  {Object} data - from server\n   * @param  {Function} cb   - callback function\n   * @return {Object|Function} - return object or callback function\n   */\n  callbackHandler(data: any, cb: any): any {\n    if (cb) {\n      cb(null, data);\n    }\n    return data;\n  }\n\n  subscribe() {\n    throw new Error('HTTPProvider does not support subscriptions.');\n  }\n\n  unsubscribe() {\n    throw new Error('HTTPProvider does not support subscriptions.');\n  }\n}\n\nexport { HttpProvider };\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { RPCRequestPayload } from '../types';\nimport { RPCMethod } from './rpc';\n/**\n * @class JsonRpc\n * @description json rpc instance\n * @return {JsonRpc} Json RPC instance\n */\nclass JsonRpc {\n  messageId: number;\n  constructor() {\n    /**\n     * @var {Number} messageId\n     * @memberof JsonRpc.prototype\n     * @description message id, default 0\n     */\n    this.messageId = 0;\n  }\n\n  /**\n   * @function toPayload\n   * @memberof JsonRpc.prototype\n   * @description convert method and params to payload object\n   * @param  {String} method - RPC method\n   * @param  {Array<object>} params - params that send to RPC\n   * @return {Object} payload object\n   */\n  toPayload = (\n    method: RPCMethod | string,\n    params: string | undefined | any[],\n  ): RPCRequestPayload<any> => {\n    // FIXME: error to be done by shared/errors\n    if (!method) {\n      throw new Error('jsonrpc method should be specified!');\n    }\n\n    // advance message ID\n    this.messageId += 1;\n\n    const sendParams =\n      params === undefined ? [] : typeof params === 'string' ? [params] : [...params];\n\n    return {\n      jsonrpc: '2.0',\n      id: this.messageId,\n      method,\n      params: sendParams,\n    };\n  };\n}\n\nexport { JsonRpc };\n","/**\n * @packageDocumentation\n * @module harmony-network\n */\n\n// TODO: implement Websocket Provider\nimport { w3cwebsocket as W3CWebsocket } from 'websocket';\nimport {\n  BaseSocket,\n  SocketConnection,\n  SocketState,\n  // EmittType,\n} from './baseSocket';\nimport { isWs, isObject, isArray } from '@harmony-js/utils';\nimport { JsonRpc } from '../rpcMethod/builder';\nimport { composeMiddleware } from '../rpcMethod/net';\nimport { RPCRequestPayload } from '../types';\n\nclass WSProvider extends BaseSocket {\n  get connected() {\n    return this.connection.readyState === this.connection.OPEN;\n  }\n\n  url: string;\n  subscriptions: any;\n  options: any;\n  connection: W3CWebsocket | WebSocket;\n  jsonRpc: JsonRpc;\n\n  // ws: w3cwebsocket;\n  constructor(url: string, options: any = {}) {\n    super(url);\n    if (!isWs(url)) {\n      throw new Error(`${url} is not websocket`);\n    }\n    this.url = url;\n    this.options = options;\n    this.connection = this.createWebsocketProvider(this.url, this.options);\n    this.jsonRpc = new JsonRpc();\n    this.subscriptions = {};\n    this.registerEventListeners();\n    // this.on = this.emitter.on.bind(this);\n  }\n\n  on(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n    return this;\n  }\n  onData(handler: any) {\n    this.emitter.on('data', handler);\n    return this;\n  }\n  onError(event: any) {\n    if (event.code === 'ECONNREFUSED') {\n      this.reconnect();\n      return;\n    }\n    super.onError(event);\n  }\n  onClose(closeEvent: any) {\n    if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {\n      this.reconnect();\n      return;\n    }\n    super.onClose();\n  }\n\n  createWebsocketProvider(url: string, options: any = {}) {\n    // tslint:disable-next-line: no-string-literal\n    if (typeof window !== 'undefined' && (<any>window).WebSocket) {\n      // tslint:disable-next-line: no-string-literal\n      return new WebSocket(url, options.protocol);\n    } else {\n      const headers = options.headers || {};\n      const urlObject = new URL(url);\n\n      if (!headers.authorization && urlObject.username && urlObject.password) {\n        const authToken = Buffer.from(`${urlObject.username}:${urlObject.password}`).toString(\n          'base64',\n        );\n        headers.authorization = `Basic ${authToken}`;\n      }\n\n      return new W3CWebsocket(\n        url,\n        options.protocol,\n        undefined,\n        headers,\n        undefined,\n        options.clientConfig,\n      );\n    }\n  }\n\n  reconnect() {\n    setTimeout(() => {\n      this.removeAllSocketListeners();\n      this.connection = this.createWebsocketProvider(this.url, this.options);\n      this.registerEventListeners();\n    }, 5000);\n  }\n  isConnecting() {\n    return this.connection.readyState === this.connection.CONNECTING;\n  }\n\n  send(payload: RPCRequestPayload<object>): Promise<any> {\n    const [tReq, tRes] = this.getMiddleware(payload.method);\n    const reqMiddleware = composeMiddleware(...tReq);\n    const resMiddleware = composeMiddleware(...tRes);\n\n    return new Promise((resolve, reject) => {\n      // TODO: test on Error\n\n      if (this.connected) {\n        try {\n          this.connection.send(reqMiddleware(JSON.stringify(payload)));\n        } catch (error) {\n          // TODO !isConnecting then reconnect?\n          this.removeEventListener(SocketConnection.ERROR);\n          throw error;\n        }\n      }\n      this.emitter.on(SocketConnection.CONNECT, () => {\n        try {\n          this.connection.send(reqMiddleware(JSON.stringify(payload)));\n        } catch (error) {\n          // TODO !isConnecting then reconnect?\n          this.removeEventListener(SocketConnection.ERROR);\n          throw error;\n        }\n      });\n      this.emitter.on(`${payload.id}`, (data) => {\n        resolve(resMiddleware(data));\n        this.removeEventListener(`${payload.id}`);\n      });\n      this.emitter.on(SocketConnection.ERROR, reject);\n    });\n  }\n\n  async subscribe(payload: RPCRequestPayload<any[]>) {\n    const response = await this.send(payload);\n    const responseValidateResult = this.validate(response);\n    if (responseValidateResult instanceof Error) {\n      throw responseValidateResult;\n    }\n    this.subscriptions[response.result] = {\n      id: response.result,\n      subscribeMethod: payload.method,\n      parameters: payload.params,\n      payload,\n    };\n\n    return response.result;\n  }\n\n  async unsubscribe(payload: RPCRequestPayload<any[]>) {\n    const subscriptionId = payload.params[0];\n    if (this.hasSubscription(subscriptionId)) {\n      return this.send(payload).then((response) => {\n        if (response) {\n          this.removeEventListener(this.getSubscriptionEvent(subscriptionId));\n          delete this.subscriptions[subscriptionId];\n        }\n\n        return response;\n      });\n    }\n\n    return Promise.reject(\n      new Error(`Provider error: Subscription with ID ${subscriptionId} does not exist.`),\n    );\n  }\n\n  async clearSubscriptions(unsubscribeMethod: string) {\n    const unsubscribePromises: Array<Promise<any>> = [];\n\n    Object.keys(this.subscriptions).forEach((key) => {\n      this.removeEventListener(key);\n      unsubscribePromises.push(\n        this.unsubscribe(this.jsonRpc.toPayload(unsubscribeMethod, this.subscriptions[key].id)),\n      );\n    });\n\n    const results = await Promise.all(unsubscribePromises);\n    if (results.includes(false)) {\n      throw new Error(`Could not unsubscribe all subscriptions: ${JSON.stringify(results)}`);\n    }\n    return true;\n  }\n\n  registerEventListeners() {\n    this.connection.onmessage = this.onMessage.bind(this);\n    this.connection.onopen = this.onReady.bind(this);\n    this.connection.onopen = this.onConnect.bind(this);\n    this.connection.onclose = this.onClose.bind(this);\n    this.connection.onerror = this.onError.bind(this);\n  }\n\n  onMessage(msg: MessageEvent) {\n    if (msg && msg.data) {\n      let result;\n      let event;\n      try {\n        result = isObject(msg.data) ? msg.data : JSON.parse(msg.data);\n\n        if (isArray(result)) {\n          event = result[0].id;\n        }\n        // tslint:disable-next-line: prefer-conditional-expression\n        if (typeof result.id === 'undefined') {\n          event =\n            this.getSubscriptionEvent(result.params.subscription) || result.params.subscription;\n          // result = result.params;\n        } else {\n          event = result.id;\n        }\n      } catch (error) {\n        throw error;\n      }\n      this.emitter.emit(SocketState.SOCKET_MESSAGE, result);\n      this.emitter.emit(`${event}`, result);\n    } else {\n      throw new Error('provider error');\n    }\n  }\n  async onConnect() {\n    if (!this.subscriptions) {\n      this.subscriptions = {};\n    }\n    const subscriptionKeys = Object.keys(this.subscriptions);\n\n    if (subscriptionKeys.length > 0) {\n      for (const key of subscriptionKeys) {\n        const subscriptionId: any = await this.subscribe(this.subscriptions[key].payload);\n        delete this.subscriptions[subscriptionId];\n        this.subscriptions[key].id = subscriptionId;\n      }\n    }\n\n    this.emitter.emit(SocketState.SOCKET_CONNECT);\n    this.emitter.emit(SocketConnection.CONNECT);\n  }\n  getSubscriptionEvent(subscriptionId: any) {\n    if (this.subscriptions[subscriptionId]) {\n      return subscriptionId;\n    }\n\n    let event;\n    Object.keys(this.subscriptions).forEach((key) => {\n      if (this.subscriptions[key].id === subscriptionId) {\n        event = key;\n      }\n    });\n\n    return event;\n  }\n  hasSubscription(subscriptionId: string) {\n    return typeof this.getSubscriptionEvent(subscriptionId) !== 'undefined';\n  }\n  validate(response: any, payload?: any) {\n    if (isObject(response)) {\n      if (response.error) {\n        if (response.error instanceof Error) {\n          return new Error(`Node error: ${response.error.message}`);\n        }\n\n        return new Error(`Node error: ${JSON.stringify(response.error)}`);\n      }\n\n      if (payload && response.id !== payload.id) {\n        return new Error(\n          `Validation error: Invalid JSON-RPC response ID (request: ${payload.id} / response: ${response.id})`,\n        );\n      }\n\n      if (response.result === undefined) {\n        return new Error('Validation error: Undefined JSON-RPC result');\n      }\n\n      return true;\n    }\n\n    return new Error('Validation error: Response should be of type Object');\n  }\n}\n\nexport { WSProvider };\n","/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport mitt from 'mitt';\n\nclass Emitter {\n  handlers?: any = {};\n  emitter: mitt.Emitter;\n  off: (type: string, handler: mitt.Handler) => void;\n  emit: (type: string, event?: any) => void;\n  promise: Promise<{}>;\n  resolve?: any;\n  reject?: any;\n  then?: any;\n  constructor() {\n    this.emitter = mitt(this.handlers);\n    this.off = this.emitter.off.bind(this);\n    this.emit = this.emitter.emit.bind(this);\n    // tslint:disable-next-line: no-empty\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n    this.then = this.promise.then.bind(this.promise);\n  }\n\n  resetHandlers() {\n    // tslint:disable-next-line: forin\n    for (const i in this.handlers) {\n      delete this.handlers[i];\n    }\n  }\n  on(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n    return this;\n  }\n  once(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, (e: any) => {\n      handler(e);\n      this.removeEventListener(type);\n    });\n  }\n\n  addEventListener(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n  }\n\n  removeEventListener(type?: string, handler?: mitt.Handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  }\n  onError(error: any) {\n    this.emitter.on('error', error);\n    this.removeEventListener('*');\n  }\n  onData(data: any) {\n    this.emitter.on('data', data);\n    this.removeEventListener('*');\n  }\n  listenerCount(listenKey: any) {\n    let count = 0;\n    Object.keys(this.handlers).forEach((val) => {\n      if (listenKey === val) {\n        count += 1;\n      }\n    });\n    return count;\n  }\n}\n\nexport { Emitter };\n","/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport { HttpProvider } from './http';\nimport { WSProvider } from './ws';\nimport { defaultConfig, isHttp, isWs } from '@harmony-js/utils';\n\nexport enum ProviderType {\n  http = 'http',\n  ws = 'ws',\n}\n\nexport class Provider {\n  static getProvider(provider: string | HttpProvider | WSProvider) {\n    try {\n      this.getProvider(provider);\n      return new Provider(provider);\n    } catch (error) {\n      throw error;\n    }\n  }\n  public provider: WSProvider | HttpProvider;\n  public providerType: ProviderType;\n  constructor(url: string | WSProvider | HttpProvider) {\n    this.provider = this.onInitSetProvider(url);\n    this.providerType = this.getType(this.provider);\n  }\n  private onInitSetProvider(\n    providerUrl: string | HttpProvider | WSProvider,\n  ): HttpProvider | WSProvider {\n    if (typeof providerUrl === 'string') {\n      return isHttp(providerUrl)\n        ? new HttpProvider(providerUrl)\n        : isWs(providerUrl)\n        ? new WSProvider(providerUrl)\n        : new HttpProvider(defaultConfig.Default.Chain_URL);\n    }\n    try {\n      const providerType = this.getType(providerUrl);\n      if (providerType === ProviderType.http || providerType === ProviderType.ws) {\n        return providerUrl;\n      } else {\n        throw new Error('cannot get provider type');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n  private getType(provider: HttpProvider | WSProvider) {\n    if (provider instanceof HttpProvider) {\n      return ProviderType.http;\n    }\n    if (provider instanceof WSProvider) {\n      return ProviderType.ws;\n    }\n    throw new Error('provider is not correct');\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { RPCResponseBody } from '../types';\nimport { isObject } from '@harmony-js/utils';\n/**\n * @class ResponseMiddleware\n * @description Response middleware of RPC\n * @param  {Object}  ResponseBody - response from rpc\n * @return {ResponseMiddleware} response middleware instance\n */\nclass ResponseMiddleware {\n  result: any;\n  error: any;\n  raw: any;\n  responseType: string;\n  constructor(ResponseBody: RPCResponseBody<any, any>) {\n    this.result = ResponseBody.result;\n    this.error = ResponseBody.error;\n    this.raw = ResponseBody;\n    this.responseType = this.getResponseType();\n  }\n\n  get getResult() {\n    return isObject(this.result) ? { ...this.result, responseType: 'result' } : this.result;\n  }\n\n  get getError() {\n    return isObject(this.error) ? { ...this.error, responseType: 'error' } : this.error;\n  }\n\n  get getRaw() {\n    return { ...this.raw, responseType: 'raw' };\n  }\n\n  getResponseType(): string {\n    if (this.error) {\n      return 'error';\n    } else if (this.result || (this.result === null && this.result !== undefined)) {\n      return 'result';\n    } else {\n      return 'raw';\n    }\n  }\n\n  isError(): boolean {\n    return this.responseType === 'error';\n  }\n  isResult(): boolean {\n    return this.responseType === 'result';\n  }\n  isRaw(): boolean {\n    return this.responseType === 'raw';\n  }\n}\nexport { ResponseMiddleware };\n","/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport { HarmonyCore, ChainType, isString, ChainID, defaultConfig } from '@harmony-js/utils';\nimport { JsonRpc } from '../rpcMethod/builder';\nimport { ResponseMiddleware } from './responseMiddleware';\nimport { HttpProvider } from '../providers/http';\nimport { WSProvider } from '../providers/ws';\n// import { getResultForData } from '../util';\nimport { RPCMethod } from '../rpcMethod/rpc';\nimport { SubscribeReturns, ShardingItem } from '../types';\n\n/** @hidden */\nexport interface ShardingProvider {\n  current: boolean;\n  shardID: number;\n  http: string;\n  ws: string;\n}\n\n/**\n * ## How to Create a Massage\n * @example\n * ```\n * const { HttpProvider, Messenger } = require('@harmony-js/network');\n * const { ChainType, ChainID } = require('@harmony-js/utils');\n *\n * // create a custom messenger\n * const customMessenger = new Messenger(\n *   new HttpProvider('http://localhost:9500'),\n *   ChainType.Harmony, // if you are connected to Harmony's blockchain\n *   ChainID.HmyLocal, // check if the chainId is correct\n * )\n * ```\n */\nclass Messenger extends HarmonyCore {\n  provider: HttpProvider | WSProvider;\n  config?: object;\n  // tslint:disable-next-line: variable-name\n  Network_ID: string = 'Default';\n  shardProviders: Map<number, ShardingProvider>;\n\n  JsonRpc: JsonRpc;\n  defaultShardID?: number;\n\n  constructor(\n    provider: HttpProvider | WSProvider,\n    chainType: ChainType = defaultConfig.Default.Chain_Type,\n    chainId: ChainID = defaultConfig.Default.Chain_ID,\n    config: object = defaultConfig,\n  ) {\n    super(chainType, chainId);\n\n    /**\n     * @var {Provider} provider\n     * @memberof Messenger.prototype\n     * @description Provider instance\n     */\n    this.provider = provider;\n\n    /**\n     * @var {Object} config\n     * @memberof Messenger.prototype\n     * @description Messenger config\n     */\n    this.config = config;\n    /**\n     * @var {Number} Network_ID\n     * @memberof Messenger.prototype\n     * @description Network ID for current provider\n     */\n\n    /**\n     * @var {JsonRpc} JsonRpc\n     * @memberof Messenger.prototype\n     * @description JsonRpc instance\n     */\n    this.JsonRpc = new JsonRpc();\n\n    // set Network ID\n    this.setNetworkID(defaultConfig.Default.Network_ID);\n\n    // set shardingProviders\n\n    this.shardProviders = new Map();\n    // this.setShardingProviders();\n  }\n\n  /**\n   * @example\n   * ```\n   * customMessenger.currentShard\n   * ```\n   */\n  get currentShard(): number {\n    return this.getCurrentShardID() || this.defaultShardID || 0;\n  }\n\n  /**\n   * @example\n   * ```\n   * customMessenger.shardCount\n   * ```\n   */\n  get shardCount(): number {\n    return this.shardProviders.size;\n  }\n\n  /**\n   * @function send\n   * @memberof Messenger.prototype\n   * @param  {String} method - RPC method\n   * @param  {Object} params - RPC method params\n   * @return {Object} RPC result\n   */\n  send = async (\n    method: RPCMethod | string,\n    params?: string | any[] | undefined,\n    rpcPrefix?: string,\n    shardID: number = this.currentShard,\n  ) => {\n    this.providerCheck();\n    let rpcMethod = method;\n    if (rpcPrefix && isString(rpcPrefix) && rpcPrefix !== this.chainPrefix) {\n      rpcMethod = this.setRPCPrefix(method, rpcPrefix);\n    } else if (!rpcPrefix || rpcPrefix === this.chainPrefix) {\n      rpcMethod = this.setRPCPrefix(method, this.chainPrefix);\n    }\n    try {\n      const payload = this.JsonRpc.toPayload(rpcMethod, params);\n      const provider = this.getShardProvider(shardID);\n      this.setResMiddleware(\n        (data: any) => {\n          if (!(data instanceof ResponseMiddleware)) {\n            return new ResponseMiddleware(data);\n          } else {\n            return data;\n          }\n        },\n        '*',\n        provider,\n      );\n\n      const result = await provider.send(payload);\n      return result;\n      // return getResultForData(result); // getResultForData(result)\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  /**\n   * @function setProvider\n   * @memberof Messenger\n   * @description provider setter\n   * @param  {Provider} provider - provider instance\n   */\n  setProvider(provider: HttpProvider | WSProvider) {\n    this.provider = provider;\n  }\n\n  /**\n   * @function providerCheck\n   * @memberof Messenger\n   * @description provider checker\n   * @return {Error|null} provider validator\n   */\n  providerCheck() {\n    if (!this.provider) {\n      throw new Error('provider is not found');\n    }\n  }\n\n  /**\n   * @function setReqMiddleware\n   * @description set request middleware\n   * @memberof Messenger\n   * @param  {any} middleware - middle ware for req\n   * @param  {String} method  - method name\n   * @hidden\n   */\n  setReqMiddleware(middleware: any, method = '*', provider: HttpProvider | WSProvider) {\n    provider.middlewares.request.use(middleware, method);\n  }\n\n  /**\n   * @function setResMiddleware\n   * @description set response middleware\n   * @memberof Messenger\n   * @param  {any} middleware - middle ware for req\n   * @param  {String} method  - method name\n   * @hidden\n   */\n  setResMiddleware(middleware: any, method = '*', provider: HttpProvider | WSProvider) {\n    provider.middlewares.response.use(middleware, method);\n  }\n\n  /**\n   * @function setNetworkID\n   * @description set network id\n   * @memberof Messenger\n   * @param  {String} id network id string\n   */\n  setNetworkID(id: string) {\n    this.Network_ID = id;\n  }\n\n  setRPCPrefix(method: RPCMethod | string, prefix: string): string {\n    const stringArray: string[] = method.split('_');\n    if (stringArray.length !== 2) {\n      throw new Error(`could not set prefix with ${method}`);\n    }\n    stringArray[0] = prefix;\n    return stringArray.join('_');\n  }\n\n  subscribe = async (\n    method: RPCMethod | string,\n    params?: string | any[] | undefined,\n    returnType: SubscribeReturns = SubscribeReturns.all,\n    rpcPrefix: string = this.chainPrefix,\n    shardID: number = this.currentShard,\n  ) => {\n    let rpcMethod = method;\n    if (rpcPrefix && isString(rpcPrefix) && rpcPrefix !== this.chainPrefix) {\n      rpcMethod = this.setRPCPrefix(method, rpcPrefix);\n    } else if (!rpcPrefix || rpcPrefix === this.chainPrefix) {\n      rpcMethod = this.setRPCPrefix(method, this.chainPrefix);\n    }\n    let id: any = null;\n    const provider = this.getShardProvider(shardID);\n    if (provider instanceof WSProvider) {\n      const reProvider = provider;\n\n      try {\n        const payload = this.JsonRpc.toPayload(rpcMethod, params);\n        id = await reProvider.subscribe(payload);\n        reProvider.on(id, (result: any) => {\n          reProvider.emitter.emit('data', result);\n        });\n        reProvider.once('error', (error) => {\n          reProvider.removeEventListener(id);\n          reProvider.emitter.emit('error', error);\n          reProvider.removeEventListener('*');\n        });\n      } catch (error) {\n        reProvider.emitter.emit('error', error);\n        reProvider.removeEventListener('*');\n      }\n      if (returnType === SubscribeReturns.all) {\n        return [reProvider, id];\n      } else if (returnType === SubscribeReturns.method) {\n        return reProvider;\n      } else if (returnType === SubscribeReturns.id) {\n        return id;\n      } else {\n        throw new Error('Invalid returns');\n      }\n    } else {\n      throw new Error('HttpProvider does not support this');\n    }\n  };\n\n  unsubscribe = async (\n    method: RPCMethod | string,\n    params?: string | any[] | undefined,\n    rpcPrefix?: string,\n    shardID: number = this.currentShard,\n  ) => {\n    let rpcMethod = method;\n    if (rpcPrefix && isString(rpcPrefix) && rpcPrefix !== this.chainPrefix) {\n      rpcMethod = this.setRPCPrefix(method, rpcPrefix);\n    } else if (!rpcPrefix || rpcPrefix === this.chainPrefix) {\n      rpcMethod = this.setRPCPrefix(method, this.chainPrefix);\n    }\n    const provider = this.getShardProvider(shardID);\n    if (provider instanceof WSProvider) {\n      const reProvider = this.provider;\n      try {\n        const payload = this.JsonRpc.toPayload(rpcMethod, params);\n        const response = await reProvider.unsubscribe(payload);\n        return response;\n      } catch (error) {\n        throw error;\n      }\n    } else {\n      throw new Error('HttpProvider does not support this');\n    }\n  };\n\n  async setShardingProviders() {\n    if (this.chainPrefix !== ChainType.Harmony) {\n      return;\n    }\n    try {\n      const response = await this.send(RPCMethod.GetShardingStructure, [], this.chainPrefix);\n\n      if (response.result) {\n        const shardingStructures: ShardingItem[] = response.result;\n        for (const shard of shardingStructures) {\n          const shardID =\n            typeof shard.shardID === 'string' ? Number.parseInt(shard.shardID, 10) : shard.shardID;\n          this.shardProviders.set(shardID, {\n            current: shard.current,\n            shardID,\n            http: shard.http,\n            ws: shard.ws,\n          });\n        }\n      }\n    } catch (error) {\n      return;\n    }\n  }\n\n  /**\n   * @example\n   * ```\n   * hmy.messenger.getShardProvider()\n   * ```\n   */\n  getShardProvider(shardID: number): HttpProvider | WSProvider {\n    const provider = this.shardProviders.get(shardID);\n    if (provider) {\n      return this.provider instanceof HttpProvider\n        ? new HttpProvider(provider.http)\n        : new WSProvider(provider.ws);\n    }\n    return this.provider;\n  }\n\n  /**\n   * @example\n   * ```\n   * hmy.messenger.getCurrentShardID()\n   * ```\n   */\n\n  getCurrentShardID() {\n    for (const shard of this.shardProviders) {\n      if (\n        shard[1].current === true ||\n        shard[1].http === this.provider.url ||\n        shard[1].ws === this.provider.url\n      ) {\n        return shard[1].shardID;\n      }\n    }\n  }\n  setDefaultShardID(shardID: number) {\n    this.defaultShardID = shardID;\n  }\n}\nexport { Messenger };\n","/**\n * ## About this package\n *\n * `@harmony-js/network` provides functions to handle messenger, providers and subscriptions...\n *\n * ## How to use this package\n *\n * ### 1. Create a Message\n * ```javascript\n * const { HttpProvider, Messenger } = require('@harmony-js/network');\n * const { ChainType, ChainID } = require('@harmony-js/utils');\n *\n * // create a custom messenger\n * const customMessenger = new Messenger(\n *   new HttpProvider('http://localhost:9500'),\n *   ChainType.Harmony, // if you are connected to Harmony's blockchain\n *   ChainID.HmyLocal, // check if the chainId is correct\n * )\n * ```\n *\n * @packageDocumentation\n * @module harmony-network\n */\n\n/**@ignore */\nexport const enum RPCMethod {\n  // 1. hmy_getBlockByHash\n  GetBlockByHash = 'hmy_getBlockByHash',\n  // 2. hmy_getBlockByNumber\n  GetBlockByNumber = 'hmy_getBlockByNumber',\n  // 3. hmy_getBlockTransactionCountByHash\n  GetBlockTransactionCountByHash = 'hmy_getBlockTransactionCountByHash',\n  // 4. hmy_getBlockTransactionCountByNumber\n  GetBlockTransactionCountByNumber = 'hmy_getBlockTransactionCountByNumber',\n  // 5. hmy_getCode\n  GetCode = 'hmy_getCode',\n  // 6. hmy_getTransactionByBlockHashAndIndex\n  GetTransactionByBlockHashAndIndex = 'hmy_getTransactionByBlockHashAndIndex',\n  // 7. hmy_getTransactionByBlockNumberAndIndex\n  GetTransactionByBlockNumberAndIndex = 'hmy_getTransactionByBlockNumberAndIndex',\n  // 8. hmy_getTransactionByHash\n  GetTransactionByHash = 'hmy_getTransactionByHash',\n\n  GetTransactionReceipt = 'hmy_getTransactionReceipt',\n\n  GetCXReceiptByHash = 'hmy_getCXReceiptByHash',\n  // 9. hmy_syncing\n  Syncing = 'hmy_syncing',\n  // 10. net_peerCount\n  PeerCount = 'net_peerCount',\n\n  // 11. hmy_getBalance\n  GetBalance = 'hmy_getBalance',\n  // 12. hmy_getStorageAt\n  GetStorageAt = 'hmy_getStorageAt',\n  // 13. hmy_getTransactionCount\n  GetTransactionCount = 'hmy_getTransactionCount',\n  // 14. hmy_sendTransaction\n  SendTransaction = 'hmy_sendTransaction',\n  // 15. hmy_sendRawTransaction\n  SendRawTransaction = 'hmy_sendRawTransaction',\n  // 16. hmy_subscribe\n  Subscribe = 'hmy_subscribe',\n  // 17. hmy_getlogs\n  GetPastLogs = 'hmy_getLogs',\n  // 18. hmy_getWork\n  GetWork = 'hmy_getWork',\n  // 19. hmy_submitWork\n  // SubmitWork = 'hmy_submitWork',\n  // 20. hmy_getProof\n  GetProof = 'hmy_getProof',\n  // 21, hmy_getFilterChanges\n  GetFilterChanges = 'hmy_getFilterChanges',\n  // 22. hmy_newPendingTransactionFilter\n  NewPendingTransactionFilter = 'hmy_newPendingTransactionFilter',\n  // 23. hmy_newBlockFilter\n  NewBlockFilter = 'hmy_newBlockFilter',\n  // 24. hmy_newFilter\n  NewFilter = 'hmy_newFilter',\n  // 25. hmy_call\n  Call = 'hmy_call',\n  // 26. hmy_estimateGas\n  EstimateGas = 'hmy_estimateGas',\n  // 27. hmy_gasPrice\n  GasPrice = 'hmy_gasPrice',\n  // 28. hmy_blockNumber\n  BlockNumber = 'hmy_blockNumber',\n  // 29. hmy_unsubscribe\n  UnSubscribe = 'hmy_unsubscribe',\n  // 30. net_version\n  NetVersion = 'net_version',\n  // 31. hmy_protocolVersion\n  ProtocolVersion = 'hmy_protocolVersion',\n  // 32. hmy_getShardingStructure\n  GetShardingStructure = 'hmy_getShardingStructure',\n  // 33. hmy_sendRawStakingTransaction\n  SendRawStakingTransaction = 'hmy_sendRawStakingTransaction',\n}\n\n/**@ignore */\nexport const enum RPCErrorCode {\n  // Standard JSON-RPC 2.0 errors\n  // RPC_INVALID_REQUEST is internally mapped to HTTP_BAD_REQUEST (400).\n  // It should not be used for application-layer errors.\n  RPC_INVALID_REQUEST = -32600,\n  // RPC_METHOD_NOT_FOUND is internally mapped to HTTP_NOT_FOUND (404).\n  // It should not be used for application-layer errors.\n  RPC_METHOD_NOT_FOUND = -32601,\n  RPC_INVALID_PARAMS = -32602,\n  // RPC_INTERNAL_ERROR should only be used for genuine errors in bitcoind\n  // (for example datadir corruption).\n  RPC_INTERNAL_ERROR = -32603,\n  RPC_PARSE_ERROR = -32700,\n\n  // General application defined errors\n  RPC_MISC_ERROR = -1, // std::exception thrown in command handling\n  RPC_TYPE_ERROR = -3, // Unexpected type was passed as parameter\n  RPC_INVALID_ADDRESS_OR_KEY = -5, // Invalid address or key\n  RPC_INVALID_PARAMETER = -8, // Invalid, missing or duplicate parameter\n  RPC_DATABASE_ERROR = -20, // Database error\n  RPC_DESERIALIZATION_ERROR = -22, // Error parsing or validating structure in raw format\n  RPC_VERIFY_ERROR = -25, // General error during transaction or block submission\n  RPC_VERIFY_REJECTED = -26, // Transaction or block was rejected by network rules\n  RPC_IN_WARMUP = -28, // Client still warming up\n  RPC_METHOD_DEPRECATED = -32, // RPC method is deprecated\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { isHex, hexToNumber } from '@harmony-js/utils';\nimport { Emitter } from '../providers/emitter';\n\nconst sec = 1000;\n\nconst calculateSum = (accumulator: number, currentValue: number) => accumulator + currentValue;\nconst blockTrackerEvents = ['sync', 'latest'];\n\nexport class BaseBlockTracker extends Emitter {\n  // tslint:disable-next-line: variable-name\n  _blockResetDuration?: number;\n  // tslint:disable-next-line: variable-name\n  _blockResetTimeout: any;\n  // tslint:disable-next-line: variable-name\n  _currentBlock: any;\n  // tslint:disable-next-line: variable-name\n  _isRunning: boolean;\n  constructor(\n    opts: any = {\n      blockResetDuration: undefined,\n      retryTimeout: undefined,\n      keepEventLoopActive: undefined,\n      setSkipCacheFlag: false,\n    },\n  ) {\n    super();\n    // config\n    this._blockResetDuration = opts.blockResetDuration || 20 * sec;\n    // state\n    // tslint:disable-next-line: no-unused-expression\n    this._blockResetTimeout;\n    this._currentBlock = null;\n    this._isRunning = false;\n    // bind functions for internal use\n    // this._onNewListener = this._onNewListener.bind(this);\n    // this._onRemoveListener = this._onRemoveListener.bind(this);\n    // this._resetCurrentBlock = this._resetCurrentBlock.bind(this);\n    // listen for handler changes\n    // this._setupInternalEvents();\n    this._maybeStart();\n  }\n\n  isRunning() {\n    return this._isRunning;\n  }\n\n  getCurrentBlock() {\n    return this._currentBlock;\n  }\n\n  async getLatestBlock() {\n    // return if available\n    if (this._currentBlock) {\n      return this._currentBlock;\n    }\n    // wait for a new latest block\n    const latestBlock = await new Promise((resolve) => this.once('latest', resolve));\n    // return newly set current block\n    return latestBlock;\n  }\n\n  // dont allow module consumer to remove our internal event listeners\n  removeAllListeners(eventName: string) {\n    // perform default behavior, preserve fn arity\n    if (eventName) {\n      super.removeEventListener(eventName);\n    } else {\n      super.removeEventListener('*');\n    }\n    // re-add internal events\n    this._setupInternalEvents();\n    // trigger stop check just in case\n    this._onRemoveListener('*');\n  }\n\n  //\n  // to be implemented in subclass\n  //\n\n  _start() {\n    // default behavior is noop\n  }\n\n  _end() {\n    // default behavior is noop\n  }\n\n  //\n  // private\n  //\n\n  _setupInternalEvents() {\n    // first remove listeners for idempotence\n    this.removeEventListener('newListener', this._onNewListener);\n    this.removeEventListener('removeListener', this._onRemoveListener);\n    // then add them\n\n    this.on('newListener', this._onNewListener);\n    this.on('removeListener', this._onRemoveListener);\n  }\n\n  _onNewListener(eventName: string, handler?: mitt.Handler) {\n    // `newListener` is called *before* the listener is added\n    if (!blockTrackerEvents.includes(eventName)) {\n      return;\n    }\n\n    this._maybeStart();\n  }\n\n  _onRemoveListener(eventName: string, handler?: mitt.Handler) {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) {\n      return;\n    }\n    this._maybeEnd();\n  }\n\n  _maybeStart() {\n    if (this._isRunning) {\n      return;\n    }\n    this._isRunning = true;\n    // cancel setting latest block to stale\n    this._cancelBlockResetTimeout();\n    this._start();\n  }\n\n  _maybeEnd() {\n    if (!this._isRunning) {\n      return;\n    }\n    this._isRunning = false;\n    this._setupBlockResetTimeout();\n    this._end();\n  }\n\n  _getBlockTrackerEventCount() {\n    return blockTrackerEvents\n      .map((eventName) => this.listenerCount(eventName))\n      .reduce(calculateSum);\n  }\n\n  _newPotentialLatest(newBlock: string) {\n    const currentBlock = this._currentBlock;\n    // only update if blok number is higher\n    if (\n      currentBlock &&\n      isHex(currentBlock) &&\n      isHex(newBlock) &&\n      hexToNumber(newBlock) <= hexToNumber(currentBlock)\n    ) {\n      return;\n    }\n    this._setCurrentBlock(newBlock);\n  }\n\n  _setCurrentBlock(newBlock: string) {\n    const oldBlock = this._currentBlock;\n    this._currentBlock = newBlock;\n    this.emit('latest', newBlock);\n    this.emit('sync', { oldBlock, newBlock });\n  }\n\n  _setupBlockResetTimeout() {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout();\n    // clear latest block when stale\n    this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration);\n    // nodejs - dont hold process open\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref();\n    }\n  }\n\n  _cancelBlockResetTimeout() {\n    clearTimeout(this._blockResetTimeout);\n  }\n\n  _resetCurrentBlock() {\n    this._currentBlock = null;\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { BaseBlockTracker } from './baseTracker';\nimport { Messenger } from '../messenger/messenger';\nimport { RPCMethod } from '../rpcMethod/rpc';\n\nconst sec = 1000;\n\nexport function timeout(duration: number, unref: any) {\n  return new Promise((resolve) => {\n    const timoutRef: any = setTimeout(resolve, duration);\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref();\n    }\n  });\n}\nexport class PollingBlockTracker extends BaseBlockTracker {\n  messenger: Messenger;\n  // tslint:disable-next-line: variable-name\n  _pollingInterval: number;\n  // tslint:disable-next-line: variable-name\n  _retryTimeout: number;\n  // tslint:disable-next-line: variable-name\n  _keepEventLoopActive: boolean;\n  // tslint:disable-next-line: variable-name\n  _setSkipCacheFlag: boolean;\n  constructor(\n    messenger: Messenger,\n    opts = {\n      pollingInterval: undefined,\n      retryTimeout: undefined,\n      keepEventLoopActive: false,\n      setSkipCacheFlag: false,\n    },\n  ) {\n    // parse + validate args\n    if (!messenger) {\n      throw new Error('PollingBlockTracker - no provider specified.');\n    }\n\n    const pollingInterval: number = opts.pollingInterval || 20 * sec;\n    const retryTimeout: number = opts.retryTimeout || pollingInterval / 10;\n    const keepEventLoopActive: boolean =\n      opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true;\n    const setSkipCacheFlag = opts.setSkipCacheFlag || false;\n    // BaseBlockTracker constructor\n    super({\n      blockResetDuration: pollingInterval,\n      retryTimeout,\n      keepEventLoopActive,\n      setSkipCacheFlag,\n    });\n    // config\n    this.messenger = messenger;\n    this._pollingInterval = pollingInterval;\n    this._retryTimeout = retryTimeout;\n    this._keepEventLoopActive = keepEventLoopActive;\n    this._setSkipCacheFlag = setSkipCacheFlag;\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  async checkForLatestBlock() {\n    await this._updateLatestBlock();\n    const result = await this.getLatestBlock();\n    return result;\n  }\n\n  //\n  // private\n  //\n\n  _start() {\n    this._performSync().catch((err) => this.emit('error', err));\n  }\n\n  async _performSync() {\n    while (this._isRunning) {\n      try {\n        await this._updateLatestBlock();\n        await timeout(this._pollingInterval, !this._keepEventLoopActive);\n      } catch (err) {\n        const newErr = new Error(\n          `PollingBlockTracker - encountered an error while attempting to update latest block:\\n${err.stack}`,\n        );\n        try {\n          this.emit('error', newErr);\n        } catch (emitErr) {\n          console.error(newErr);\n        }\n        await timeout(this._retryTimeout, !this._keepEventLoopActive);\n      }\n    }\n  }\n\n  async _updateLatestBlock() {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock();\n    this._newPotentialLatest(latestBlock);\n  }\n\n  async _fetchLatestBlock() {\n    try {\n      const result = await this.messenger.send(RPCMethod.BlockNumber, []);\n      if (result.isError()) {\n        throw result.message;\n      } else if (result.isResult()) {\n        return result.result;\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { Messenger } from '../messenger/messenger';\nimport { WSProvider } from '../providers/ws';\nimport { BaseBlockTracker } from './baseTracker';\nimport { RPCMethod } from '../rpcMethod/rpc';\n\nexport class SubscribeBlockTracker extends BaseBlockTracker {\n  messenger: Messenger;\n  subscriptionId: any;\n  // tslint:disable-next-line: variable-name\n\n  constructor(messenger: Messenger, opts = {}) {\n    // parse + validate args\n    if (!messenger) {\n      throw new Error('SubscribeBlockTracker - no provider specified.');\n    }\n    if (!(messenger.provider instanceof WSProvider)) {\n      throw new Error('This provider not supported');\n    }\n    // BaseBlockTracker constructor\n    super(opts);\n    // config\n    this.messenger = messenger;\n    this.subscriptionId = null;\n  }\n\n  async checkForLatestBlock() {\n    const result = await this.getLatestBlock();\n    return result;\n  }\n\n  async _start() {\n    try {\n      const blockNumber = await this.messenger.send(RPCMethod.BlockNumber, []);\n\n      if (blockNumber.isError()) {\n        throw blockNumber.message;\n      } else if (blockNumber.isResult()) {\n        const subs = await this.messenger.subscribe(RPCMethod.Subscribe, ['newHeads']);\n        this.subscriptionId = subs;\n        subs[0].onData(this._handleSubData);\n\n        this._newPotentialLatest(blockNumber);\n      }\n    } catch (error) {\n      this.emit('error', error);\n    }\n  }\n\n  async _end() {\n    if (this.subscriptionId != null) {\n      this.messenger.unsubscribe(RPCMethod.UnSubscribe, [this.subscriptionId]);\n      delete this.subscriptionId;\n    }\n  }\n\n  _handleSubData(data: any) {\n    if (\n      // data.method === 'eth_subscription' &&\n      data.params.subscription === this.subscriptionId\n    ) {\n      this._newPotentialLatest(data.params.result.number);\n    }\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport { Messenger } from '../messenger/messenger';\nimport { RPCMethod } from '../rpcMethod/rpc';\nimport { WSProvider } from '../providers/ws';\nimport { RPCRequestPayload } from '../types';\n\nexport class SubscriptionMethod extends WSProvider {\n  param: any;\n  options: any;\n  shardID: number;\n  messenger: Messenger;\n\n  subscriptionId: any = null;\n  constructor(param: any, options: any, messenger: Messenger, shardID: number = 0) {\n    super(shardID !== 0 ? messenger.getShardProvider(shardID).url : messenger.provider.url);\n    this.shardID = shardID;\n    this.param = param;\n    this.options = options;\n    this.messenger = messenger;\n  }\n\n  constructPayload(method: string, param: any, options?: any): RPCRequestPayload<any> {\n    let rpcMethod = method;\n    const payload: any = [];\n    payload.push(param);\n    if (options) {\n      payload.push(options);\n    }\n    rpcMethod = this.messenger.setRPCPrefix(method, this.messenger.chainPrefix);\n    return this.jsonRpc.toPayload(rpcMethod, payload);\n  }\n\n  async start() {\n    const subscribePayload = this.constructPayload(RPCMethod.Subscribe, this.param, this.options);\n    try {\n      const id = await super.subscribe(subscribePayload);\n      this.subscriptionId = id;\n      this.on(id, (result: any) => {\n        const output = this.onNewSubscriptionItem(result);\n\n        this.emitter.emit('data', output);\n      });\n      this.once('error', (error) => {\n        this.removeEventListener(id);\n        this.emitter.emit('error', error);\n        this.removeEventListener('*');\n      });\n    } catch (error) {\n      this.emitter.emit('error', error);\n      this.removeEventListener('*');\n    }\n    return this;\n  }\n  unsubscribe() {\n    const unsubscribePayload = this.constructPayload(RPCMethod.UnSubscribe, this.subscriptionId);\n    return super.unsubscribe(unsubscribePayload);\n  }\n  onNewSubscriptionItem(subscriptionItem: any) {\n    return subscriptionItem;\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport { Messenger } from '../messenger/messenger';\nimport { SubscriptionMethod } from './Subscription';\nimport { RPCMethod } from '../rpcMethod/rpc';\n\nexport class LogSub extends SubscriptionMethod {\n  constructor(options: any, messenger: Messenger, shardID: number = 0) {\n    super('logs', options, messenger, shardID);\n    this.preprocess();\n  }\n\n  async preprocess() {\n    if (\n      (this.options.fromBlock && this.options.fromBlock !== 'latest') ||\n      this.options.fromBlock === 0 ||\n      this.options.fromBlock === '0x'\n    ) {\n      try {\n        const getPastLogs = await this.messenger.send(\n          RPCMethod.GetPastLogs,\n          [...this.options],\n          this.messenger.chainType,\n          this.shardID,\n        );\n\n        if (getPastLogs.isError()) {\n          this.emitter.emit('error', getPastLogs.error.message);\n        } else {\n          const logs = getPastLogs.result;\n          logs.forEach((log: any) => {\n            const formattedLog = this.onNewSubscriptionItem(log);\n            this.emitter.emit('data', formattedLog);\n          });\n        }\n        delete this.options.fromBlock;\n        // const sub = this.start();\n        return this.start();\n      } catch (error) {\n        this.emitter.emit('error', error);\n        throw error;\n      }\n    }\n    return this.start();\n  }\n\n  onNewSubscriptionItem(subscriptionItem: any) {\n    // todo log formatter\n    const log = subscriptionItem;\n\n    if (log.removed) {\n      this.emitter.emit('changed', log);\n    }\n\n    return log;\n  }\n  // todo formatter\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport { Messenger } from '../messenger/messenger';\nimport { SubscriptionMethod } from './Subscription';\n\n/**\n * ### Description:\n * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n */\nexport class NewHeaders extends SubscriptionMethod {\n  constructor(messenger: Messenger, shardID: number = 0) {\n    super('newHeads', undefined, messenger, shardID);\n    this.start();\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport { Messenger } from '../messenger/messenger';\nimport { SubscriptionMethod } from './Subscription';\n\n/**\n * ### Description:\n * Subscribes to incoming pending transactions\n */\nexport class NewPendingTransactions extends SubscriptionMethod {\n  constructor(messenger: Messenger, shardID: number = 0) {\n    super('newPendingTransactions', undefined, messenger, shardID);\n    this.start();\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { Messenger } from '../messenger/messenger';\nimport { SubscriptionMethod } from './Subscription';\n\nexport class Syncing extends SubscriptionMethod {\n  isSyncing: boolean | null;\n  constructor(messenger: Messenger, shardID: number = 0) {\n    super('syncing', undefined, messenger, shardID);\n    this.isSyncing = null;\n    this.start();\n  }\n\n  onNewSubscriptionItem(subscriptionItem: any) {\n    const isSyncing = subscriptionItem.params.result.syncing;\n\n    if (this.isSyncing === null) {\n      this.isSyncing = isSyncing;\n      this.emitter.emit('changed', this.isSyncing);\n    }\n\n    if (this.isSyncing === true && isSyncing === false) {\n      this.isSyncing = isSyncing;\n      this.emitter.emit('changed', this.isSyncing);\n    }\n\n    if (this.isSyncing === false && isSyncing === true) {\n      this.isSyncing = isSyncing;\n      this.emitter.emit('changed', this.isSyncing);\n    }\n    // todo formatter\n    return subscriptionItem;\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { ResponseMiddleware } from './messenger/responseMiddleware';\n\n/**\n * @function getResultForData\n * @description get result for data by default\n * @param  {any} data - object get from provider\n * @return {any} data result or data\n */\nexport function getResultForData(data: any): any {\n  if (data.result) {\n    return data.getResult;\n  }\n  if (data.error) {\n    return data.getError;\n  }\n  return data.getRaw;\n}\n\nexport function getRawForData(data: any): any {\n  return data.getRaw;\n}\n\nexport function onResponse(response: ResponseMiddleware) {\n  if (response.responseType === 'result') {\n    return response.getResult;\n  } else if (response.responseType === 'error') {\n    return response.getError;\n  } else {\n    return response.raw;\n  }\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @ignore\n */\n\nimport { RPCMethod, RPCErrorCode } from './rpcMethod/rpc';\n\nexport type ReqMiddleware = Map<string | RPCMethod | RegExp, any[]>;\nexport type ResMiddleware = Map<string | RPCMethod | RegExp, any[]>;\n\nexport const enum MiddlewareType {\n  REQ,\n  RES,\n}\n\nexport const enum SubscribeReturns {\n  all = 'all',\n  id = 'id',\n  method = 'method',\n}\n\nexport interface Middleware {\n  request: object;\n  response: object;\n}\n\nexport interface RPCRequestPayload<T> {\n  id: number;\n  jsonrpc: string;\n  method: RPCMethod | string;\n  params: T;\n}\n\nexport interface RPCRequestOptions {\n  headers: [];\n  method: string;\n}\n\nexport interface RPCRequest<T> {\n  url: string;\n  payload: RPCRequestPayload<T>;\n  options: RPCRequestOptions;\n}\n\nexport interface RPCResponseBase {\n  jsonrpc: string;\n  id: string;\n}\n\nexport interface RPCResponseBody<R, E> extends RPCResponseBase {\n  result: R;\n  error: E;\n}\n\nexport interface RPCError {\n  code: RPCErrorCode;\n  message: string;\n  data: any;\n}\n\nexport interface RPCResult {\n  resultString: string;\n  resultMap: Map<string, any>;\n  resultList: any[];\n  raw: any;\n}\n\nexport interface ShardingItem {\n  current: boolean;\n  shardID: number | string;\n  http: string;\n  ws: string;\n}\n","/**\n * @packageDocumentation\n * @module harmony-network\n * @ignore\n */\n\nimport mitt from 'mitt';\nexport { mitt };\n// provider related\nexport * from './providers/baseProvider';\nexport * from './providers/baseSocket';\nexport * from './providers/defaultFetcher';\nexport * from './providers/http';\nexport * from './providers/ws';\nexport * from './providers/emitter';\nexport * from './providers/provider';\n// messenger and middlewares\nexport * from './messenger/messenger';\nexport * from './messenger/responseMiddleware';\n// rpc builder and blockchain method\nexport * from './rpcMethod/builder';\nexport * from './rpcMethod/net';\nexport * from './rpcMethod/rpc';\n// trackers\nexport * from './tracker/baseTracker';\nexport * from './tracker/pollingTracker';\nexport * from './tracker/subscribeTracker';\n\n// subscriptinos\nexport * from './subscriptions/Subscription';\nexport * from './subscriptions/LogSub';\nexport * from './subscriptions/NewHeadersSub';\nexport * from './subscriptions/NewPendingTransactionsSub';\nexport * from './subscriptions/SyncingSub';\n// utils\nexport * from './util';\n// types\nexport * from './types';\n"],"names":["SocketConnection","SocketState","EmittType","isWs","W3CWebsocket","isObject","isArray","ProviderType","isHttp","defaultConfig","isString","HarmonyCore","RPCMethod","RPCErrorCode","isHex","hexToNumber","sec","MiddlewareType","SubscribeReturns"],"mappings":"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"}